{"version":3,"sources":["webpack:///./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.ts","webpack:///./src/app/kv-diagram-model/coordinate.ts","webpack:///./src/app/kvdiagram/kvdiagram.component.ts","webpack:///./src/app/logicExpression/logic-and.ts","webpack:///./src/app/logicExpression/logic-bracket-close.ts","webpack:///./src/app/logicExpression/logic-bracket-open.ts","webpack:///./src/app/logicExpression/logic-neg.ts","webpack:///./src/app/logicExpression/logic-or.ts","webpack:///./src/app/logicExpression/logic-root-expression.ts","webpack:///./src/app/phrase/logic-phrase.ts","webpack:///./src/app/qmcvisualizer/qmcvisualizer.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/kv-diagram-model/kv-diagram-entry.ts","webpack:///./src/app/kv-diagram-model/kv-diagram-generator.ts","webpack:///./src/app/kv-diagram-model/kvdiagram-segment.ts","webpack:///./src/app/logicExpression/logic-expression-abstract.ts","webpack:///./src/app/kv-diagram-model/kvdiagram.ts","webpack:///./src/app/logic-input/logic-input.component.ts","webpack:///./src/app/logicExpression/logic-tree-utils.ts","webpack:///./src/app/logicExpression/shunting-yard.ts","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/phrase/basic-logic-phrase-parser.ts","webpack:///./src/app/qmc/group-box.ts","webpack:///./src/app/qmc/group.ts","webpack:///./src/app/qmc/primimplikante.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.css","webpack:///./src/app/kvdiagram/kvdiagram.component.css","webpack:///./src/app/logic-input/logic-input.component.css","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/qmcvisualizer/qmcvisualizer.component.css","webpack:///./src/app/phrase/string-methods.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.html","webpack:///./src/app/kvdiagram/kvdiagram.component.html","webpack:///./src/app/logic-input/logic-input.component.html","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/qmcvisualizer/qmcvisualizer.component.html","webpack:///./src/app/logicExpression/logic-var.ts","webpack:///./src/app/qmc/qmc.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {LogicRootExpression} from \"../logicExpression/logic-root-expression\";\nimport {StringMethods} from \"../phrase/string-methods\";\nimport {QMC} from \"../qmc/qmc\";\n\n@Component({\n  selector: 'app-basic-logic-phrase-info',\n  templateUrl: './basic-logic-phrase-info.component.html',\n  styleUrls: ['./basic-logic-phrase-info.component.css'],\n})\nexport class BasicLogicPhraseInfoComponent implements OnInit {\n\n  private _logicPhrase: LogicPhrase = new LogicPhrase(0, [], \"\");\n  private _logicRootExpression: LogicRootExpression = new LogicRootExpression();\n  private _logicRootExpressionInDF: LogicRootExpression = new LogicRootExpression();\n  logicRootExpressionInDNF: LogicRootExpression = new LogicRootExpression();\n  qmc: QMC = new QMC();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  set logicPhrase(value: LogicPhrase) {\n    this._logicPhrase = value\n  }\n\n\n  get logicPhrase(): LogicPhrase {\n    return this._logicPhrase;\n  }\n\n  get logicRootExpressionInDF(): LogicRootExpression {\n    return this._logicRootExpressionInDF;\n  }\n\n  set logicRootExpressionInDF(value: LogicRootExpression) {\n    this._logicRootExpressionInDF = value;\n  }\n\n  get logicRootExpression(): LogicRootExpression {\n    return this._logicRootExpression;\n  }\n\n  set logicRootExpression(value: LogicRootExpression) {\n    this._logicRootExpression = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.ts","export class Coordinate {\n  constructor(x: number, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  private _x: number = 0;\n  private _y: number = 0;\n\n\n  get x(): number {\n    return this._x;\n  }\n\n  set x(value: number) {\n    this._x = value;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n\n  set y(value: number) {\n    this._y = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/coordinate.ts","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {KVDiagram} from \"../kv-diagram-model/kvdiagram\";\nimport {KvDiagramGenerator} from \"../kv-diagram-model/kv-diagram-generator\";\nimport {LogicInputComponent} from \"../logic-input/logic-input.component\";\nimport {QMC} from \"../qmc/qmc\";\n\n@Component({\n  selector: 'app-kvdiagramm',\n  templateUrl: './kvdiagram.component.html',\n  styleUrls: ['./kvdiagram.component.css'],\n})\nexport class KVDiagramComponent implements OnInit {\n\n  @ViewChild('kvDiagramCanvas') canvasRef: ElementRef;\n  private _kvDiagram: KVDiagram;\n  private mouseInCanvas: boolean = false;\n  private _logicInputCom: LogicInputComponent;\n  private qmc: QMC;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  get kvDiagram(): KVDiagram {\n    return this._kvDiagram;\n  }\n\n  get logicInputCom(): LogicInputComponent {\n    return this._logicInputCom;\n  }\n\n  set logicInputCom(value: LogicInputComponent) {\n    this._logicInputCom = value;\n  }\n\n  parse(logicPhrase: LogicPhrase) {\n\n    let generator = new KvDiagramGenerator(logicPhrase);\n    this._kvDiagram = generator.generateKVDiagram();\n    this._kvDiagram.kvDiagramComponent = this;\n    this._kvDiagram.fill(logicPhrase);\n\n    this._kvDiagram.draw(this.canvasRef);\n  }\n\n  canvasMouseEnter() {\n    this.mouseInCanvas = true;\n  }\n\n  canvasMouseLeave() {\n    this.mouseInCanvas = false;\n  }\n\n  canvasMouseMove(event: any) {\n    if(this.mouseInCanvas) {\n      let rect = this.canvasRef.nativeElement.getBoundingClientRect();\n      let x = event.clientX - rect.left;\n      let y = event.clientY - rect.top;\n      if(typeof this._kvDiagram !== \"undefined\") {\n        this._kvDiagram.mouseOver(x,y);\n      }\n    }\n    this.kvDiagram.drawGroups(this.canvasRef);\n  }\n\n  cklickedCanvas(event: any) {\n    if(this.mouseInCanvas) {\n      let rect = this.canvasRef.nativeElement.getBoundingClientRect();\n      let x = event.clientX - rect.left;\n      let y = event.clientY - rect.top;\n      if(typeof this._kvDiagram !== \"undefined\") {\n        this._kvDiagram.clicked(x,y);\n      }\n      this.kvDiagram.draw(this.canvasRef);\n      this.kvDiagram.drawGroups(this.canvasRef);\n    }\n  }\n\n  updateDNF(newDnf: string) {\n    this._logicInputCom.updateDNF(newDnf);\n  }\n\n  newQMC(qmc: QMC) {\n    this.kvDiagram.newQMC(qmc);\n    this.kvDiagram.drawGroups(this.canvasRef);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kvdiagram/kvdiagram.component.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\n\nexport class LogicAnd extends AbstractLogicExpression {\n\n  protected rightAssociative = false;\n  protected _precedence = 2;\n  protected _expressionType = \"*\";\n\n  public toString(): string {\n    return \"*\";\n  }\n\n  public phraseToString(): string {\n    let result: string = \"(\";\n    for(let expression of this.logicChildExpressions) {\n      result += expression.phraseToString() +  \"*\";\n    }\n    result = result.substring(0, result.length - 1);\n    result += \")\";\n\n    return result;\n  }\n\n  public getResult(): boolean {\n    let result: boolean = true;\n    for(let expression of this.logicChildExpressions) {\n      result = result && expression.getResult();\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-and.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\n\nexport class LogicBracketClose extends AbstractLogicExpression{\n\n  protected _expressionType = \")\";\n\n  phraseToString(): string {\n    return \")\";\n  }\n\n  public toString(): string {\n    let result: string = \")\";\n    return result;\n  }\n\n  public getResult(): boolean {\n    return false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-bracket-close.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\nexport class LogicBracketOpen extends AbstractLogicExpression{\n\n  protected _expressionType = \"(\";\n\n  phraseToString(): string {\n    return \"(\";\n  }\n\n  public toString(): string {\n    let result: string = \"(\";\n    return result;\n  }\n\n  public getResult(): boolean {\n    return false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-bracket-open.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\nimport {LogicVar} from \"./logic-var\";\n\nexport class LogicNeg extends AbstractLogicExpression {\n\n  protected rightAssociative = true;\n  protected _precedence = 3;\n  protected _expressionType = \"~\";\n\n  constructor(logicExpression: AbstractLogicExpression = null) {\n    super();\n    if(logicExpression != null) this.logicChildExpressions[0] = logicExpression;\n  }\n\n  phraseToString(): string {\n    if(typeof this._logicChildExpressions[0] !== \"undefined\") {\n      return \"~\"+this._logicChildExpressions[0].phraseToString();\n    } else {\n      return \"\";\n    }\n  }\n\n  public toString(): string {\n    return \"~\";\n  }\n\n  public getResult(): boolean {\n    if(typeof this._logicChildExpressions[0] !== \"undefined\") {\n      return !this._logicChildExpressions[0].getResult();\n    } else {\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-neg.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\n\nexport class LogicOr extends AbstractLogicExpression {\n\n  protected rightAssociative = false;\n  protected _precedence = 1;\n  protected _expressionType = \"+\";\n\n  phraseToString(): string {\n    let result: string = \"(\";\n    for(let expression of this.logicChildExpressions) {\n      result += expression.phraseToString() +  \"+\";\n    }\n    result = result.substring(0, result.length - 1);\n    result += \")\";\n\n    return result;\n  }\n\n  public toString(): string {\n    return \"+\";\n  }\n\n  public getResult(): boolean {\n    let result: boolean = true;\n    for(let expression of this.logicChildExpressions) {\n      result = result || expression.getResult();\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-or.ts","import {AbstractLogicExpression} from './logic-expression-abstract';\nimport {LogicVar} from './logic-var';\nimport {LogicAnd} from './logic-and';\nimport {LogicOr} from './logic-or';\nimport {LogicNeg} from './logic-neg';\nimport {LogicBracketClose} from './logic-bracket-close';\nimport {LogicBracketOpen} from './logic-bracket-open';\nimport {ShuntingYard} from './shunting-yard';\nimport * as _ from 'lodash';\nimport {LogicTreeUtils} from \"./logic-tree-utils\";\nimport {StringMethods} from \"../phrase/string-methods\";\n\nexport class LogicRootExpression extends AbstractLogicExpression {\n\n  phraseToString(): string {\n    if (typeof this._logicChildExpressions[0] !== 'undefined') {\n      return this._logicChildExpressions[0].phraseToString();\n    }\n    return '';\n  }\n\n  phraseToStringWithoutBreakets(): string {\n    if (typeof this._logicChildExpressions[0] !== 'undefined') {\n      let tmp = StringMethods.replaceAll(this._logicChildExpressions[0].phraseToString(),\")\",\"\")\n      return StringMethods.replaceAll(tmp,\"(\",\"\");\n    }\n    return '';\n  }\n\n  private possibleOperands: string[] = Array('~', '+', '*', '(', ')');\n  private _shuntedPhrase: Array<AbstractLogicExpression> = Array();\n\n\n  get shuntedPhrase(): Array<AbstractLogicExpression> {\n    return this._shuntedPhrase;\n  }\n\n  public toString(): string {\n    if (typeof this._logicChildExpressions[0] !== 'undefined') {\n      return this._logicChildExpressions[0].toString();\n    }\n    return '';\n  }\n\n  public getResult(): boolean {\n    if (typeof this._logicChildExpressions[0] !== 'undefined') {\n      return this._logicChildExpressions[0].getResult();\n    }\n    return false;\n  }\n\n  public parseLogicString(logicPhrase: string) {\n\n    logicPhrase = StringMethods.replaceAll(logicPhrase,\" \",\"\");\n\n    const logicObjectPhrase = this.logicStringToObjectAarray(logicPhrase);\n\n    const shuntigYard = new ShuntingYard();\n    this._shuntedPhrase = shuntigYard.startAlgo(logicObjectPhrase);\n\n    const clonedShuntedPhrase: Array<AbstractLogicExpression> = _.cloneDeep(this._shuntedPhrase);\n\n    this.logicChildExpressions = this.parseShuntedYard(clonedShuntedPhrase);\n\n  }\n\n  private logicStringToObjectAarray(logicPhrase: string) {\n    const logicObjectPhrase = Array();\n\n    const actualConjunction = '';\n    let actualVarName = '';\n\n\n    for (let i = 0; i < logicPhrase.length; i++) {\n      if (this.possibleOperands.indexOf(logicPhrase[i]) != -1 && actualVarName != '') {\n        logicObjectPhrase.push(new LogicVar(actualVarName));\n        actualVarName = '';\n      }\n      if (logicPhrase[i] == '~') {\n        logicObjectPhrase.push(new LogicNeg());\n      }\n\n      else if (logicPhrase[i] == '+') {\n        logicObjectPhrase.push(new LogicOr());\n      }\n\n      else if (logicPhrase[i] == '*') {\n        logicObjectPhrase.push(new LogicAnd());\n      }\n\n      else if (logicPhrase[i] == '(') {\n        logicObjectPhrase.push(new LogicBracketOpen());\n      }\n\n      else if (logicPhrase[i] == ')') {\n        logicObjectPhrase.push(new LogicBracketClose());\n      }\n\n      else {\n        actualVarName += logicPhrase[i];\n      }\n    }\n    if (actualVarName != '') logicObjectPhrase.push(new LogicVar(actualVarName));\n    return logicObjectPhrase;\n  }\n\n  private parseShuntedYard(_shuntedPhrase: Array<AbstractLogicExpression>): Array<AbstractLogicExpression> {\n\n    const logicObjects: Array<AbstractLogicExpression> = this.reverseArray(_shuntedPhrase);\n    const logicObjectResults: Array<AbstractLogicExpression> = Array();\n\n    while (logicObjects.length > 0) {\n      let logicObject = logicObjects.pop();\n\n      while (logicObject.parsed && logicObjects.length > 0) {\n        logicObjectResults.push(logicObject);\n        logicObject = logicObjects.pop();\n      }\n      if (logicObject.parsed) {\n        logicObjects.push(logicObject);\n        return logicObjects;\n      }\n\n      if (logicObject instanceof LogicNeg) {\n        const var1 = logicObjectResults.pop();\n        logicObject.add(var1);\n        logicObject.parsed = true;\n        logicObjects.push(logicObject);\n      }\n\n      else {\n        const var1 = logicObjectResults.pop();\n        const var2 = logicObjectResults.pop();\n        logicObject.add(var1);\n        logicObject.add(var2);\n        logicObject.parsed = true;\n        logicObjects.push(logicObject);\n      }\n    }\n\n    return logicObjects;\n  }\n\n  private reverseArray(array: Array<AbstractLogicExpression>): Array<AbstractLogicExpression> {\n    const arrayR = Array();\n    while (array.length > 0) {\n      arrayR.push(array.pop());\n    }\n    return arrayR;\n  }\n\n  public toDF() {\n    let logicTreeUtils = new LogicTreeUtils();\n\n    this.logicChildExpressions[0] = logicTreeUtils.dissolveLogicNegs(this.logicChildExpressions[0]);\n    let before = this.logicChildExpressions[0].phraseToString();\n    this.logicChildExpressions[0] = logicTreeUtils.dissolveLogicAnd(this.logicChildExpressions[0]);\n    let after = this.logicChildExpressions[0].phraseToString();\n    while (before != after) {\n      before = after;\n      this.logicChildExpressions[0] = logicTreeUtils.dissolveLogicAnd(this.logicChildExpressions[0]);\n      after = this.logicChildExpressions[0].phraseToString();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-root-expression.ts","export class LogicPhrase {\n\n  private _lengh: number = 0;\n  private _varNames:string[];\n  private _phrase: string = \"\";\n\n\n  constructor(lengh: number, varNames: string[], phrase: string) {\n    this._lengh = lengh;\n    this._varNames = varNames;\n    this._phrase = phrase;\n  }\n\n  get lengh(): number {\n    return this._lengh;\n  }\n\n  set lengh(value: number) {\n    this._lengh = value;\n  }\n\n  varCount(): number {\n    return this._varNames.length;\n  }\n  get varNames(): string[] {\n    return this._varNames;\n  }\n\n  set varNames(value: string[]) {\n    this._varNames = value;\n  }\n\n  get phrase(): string {\n    return this._phrase;\n  }\n\n  set phrase(value: string) {\n    this._phrase = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/phrase/logic-phrase.ts","import { Component, OnInit } from '@angular/core';\nimport {QMC} from \"../qmc/qmc\";\n\n@Component({\n  selector: 'app-qmcvisualizer',\n  templateUrl: './qmcvisualizer.component.html',\n  styleUrls: ['./qmcvisualizer.component.css']\n})\nexport class QMCVisualizerComponent implements OnInit {\n  private qmc: QMC = new QMC();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  newQMC(qmc: QMC) {\n    this.qmc = qmc;\n  }\n\n  getTableBackground(groupIndex): string {\n    if(groupIndex % 2 == 1) return \"table-info\";\n    else return \"\";\n  }\n\n  getEssentialPrimBackground(indexI): string {\n    let prim = this.qmc.notCombinedPrimimplikanten[indexI];\n    if(this.qmc.essentialPrimeImplicants.indexOf(prim) != -1) return \"table-warning\";\n    else return \"\";\n  }\n\n  getEssentialPrimDcBackground(dcEq) {\n    if(this.qmc.notEssentialDcEquivalents.indexOf(dcEq) == -1)  return \"table-warning\";\n    else return \"\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/qmcvisualizer/qmcvisualizer.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 154;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 154\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport {AfterViewInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit{\n  title = 'KV-Toolbox';\n  welcomeMessage = \"Das ist eine KV-Toolbox\";\n\n  ngAfterViewInit(): void {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { LogicInputComponent } from './logic-input/logic-input.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { BasicLogicPhraseInfoComponent } from './basic-logic-phrase-info/basic-logic-phrase-info.component';\nimport { KVDiagramComponent } from './kvdiagram/kvdiagram.component';\nimport { QMCVisualizerComponent } from './qmcvisualizer/qmcvisualizer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogicInputComponent,\n    NavbarComponent,\n    BasicLogicPhraseInfoComponent,\n    KVDiagramComponent,\n    QMCVisualizerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    NgbModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {ElementRef} from '@angular/core';\nimport {KVDiagramSegment} from \"./kvdiagram-segment\";\nimport {KVDiagram} from \"./kvdiagram\";\nimport {Primimplikante} from \"../qmc/primimplikante\";\nimport {Group} from \"../qmc/group\";\nimport {GroupBox} from \"../qmc/group-box\";\n\nexport class KvDiagramEntry {\n  private _xPos:number;\n  private _yPos:number;\n  private _value:number;\n  public width: number = 50;\n  private varCombinationTag: string[] = Array();\n  private _mouseOn: boolean;\n  private _ctx: CanvasRenderingContext2D;\n  private _kvDiagram: KVDiagram;\n  private qmcGroups: GroupBox[] = new Array();\n\n\n  constructor(xPos: number, yPos: number) {\n    this._xPos = xPos;\n    this._yPos = yPos;\n  }\n\n  get kvDiagram(): KVDiagram {\n    return this._kvDiagram;\n  }\n\n  set kvDiagram(value: KVDiagram) {\n    this._kvDiagram = value;\n  }\n\n  get ctx(): CanvasRenderingContext2D {\n    return this._ctx;\n  }\n\n  set ctx(value: CanvasRenderingContext2D) {\n    this._ctx = value;\n  }\n\n  get xPos(): number {\n    return this._xPos;\n  }\n\n  set xPos(value: number) {\n    this._xPos = value;\n  }\n\n  get yPos(): number {\n    return this._yPos;\n  }\n\n  set yPos(value: number) {\n    this._yPos = value;\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  set value(value: number) {\n    this._value = value;\n  }\n\n  get mouseOn(): boolean {\n    return this._mouseOn;\n  }\n\n  set mouseOn(value: boolean) {\n    this._mouseOn = value;\n    this.draw();\n  }\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.rect(this._xPos * this.width, this._yPos * this.width, this.width, this.width);\n    if(this.mouseOn) this.ctx.fillStyle = \"#D7D7D7\";\n    else this.ctx.fillStyle = \"#FFFFFF\";\n    this.ctx.fill();\n    this.ctx.stroke();\n\n    this.ctx.fillStyle = \"black\";\n    if(this.value == 1) {\n      this.ctx.font = '25px sans-serif';\n      this.ctx.fillText(\"1\", (this._xPos) * this.width+20, (this._yPos) * this.width+40, this.width);\n    }\n  }\n\n  genCombinationTags(segments: KVDiagramSegment[]) {\n    this.varCombinationTag = Array();\n    for(let segment of segments) {\n      if(segment.inSegment(this._xPos, this._yPos)) this.varCombinationTag.push(segment.varName);\n    }\n  }\n\n  combinationPartOfTag(vars: string[]): boolean {\n    for(let name of vars) {\n      if(!this.varCombinationTag.includes(name)) return false\n    }\n    return true;\n  }\n\n  getCombinationsAsString(): string {\n    let combination: string = \"\";\n    for(let name of this.varCombinationTag) {\n      combination += \"*\"+name;\n    }\n    return combination.substr(1);\n  }\n\n  clicked() {\n    if(this.value == 1) this.value = 0;\n    else this.value = 1;\n    this.kvDiagram.updatedMatrixValues();\n  }\n\n  addGroupBox(groupBox: GroupBox) {\n    this.qmcGroups.push(groupBox);\n  }\n\n  startEnlargeGroupBoxes() {\n    for(let groupBox of this.qmcGroups) {\n      groupBox.point1.x = this.xPos;\n      groupBox.point2.x = this.xPos;\n      groupBox.point1.y = this.yPos;\n      groupBox.point2.y = this.yPos;\n      groupBox = this.enlargeGroupBoxes(groupBox);\n\n      groupBox.assignedGroup.underGroups.push(groupBox);\n    }\n  }\n\n  private enlargeGroupBoxes(groupBox: GroupBox): GroupBox {\n    let i = 0;\n    for(let entriesGroups of this.qmcGroups) {\n      if(entriesGroups.assignedGroup == groupBox.assignedGroup) {\n        i++;\n        break;\n      }\n    }\n    if(i==0) return groupBox;\n\n\n    if(this.combinationPartOfTag(groupBox.assignedGroup.primImplikant.vars)) {\n      if(this.xPos < groupBox.point1.x) groupBox.point1.x = this.xPos;\n      if(this.xPos > groupBox.point2.x) groupBox.point2.x = this.xPos;\n      if(this.yPos < groupBox.point1.y) groupBox.point1.y = this.yPos;\n      if(this.yPos > groupBox.point2.y) groupBox.point2.y = this.yPos;\n\n      let i = 0;\n      for(let entriesGroups of this.qmcGroups) {\n        if(entriesGroups.assignedGroup == groupBox.assignedGroup) {\n          this.qmcGroups.splice(i,1);\n        }\n        i++;\n      }\n\n      for(let dx = -1; dx <= 1; dx++) {\n        for(let dy = -1; dy <= 1; dy++) {\n          if((Math.abs(dy)+Math.abs(dx)) != 2) {\n            if (this.kvDiagram.isOnDiagram(this.xPos + dx, this.yPos + dy)) {\n              groupBox = this.kvDiagram.kvMatrix[this.xPos + dx][this.yPos + dy].enlargeGroupBoxes(groupBox);\n            }\n          }\n        }\n      }\n\n      return groupBox;\n\n    }\n    else {\n      return groupBox;\n    }\n  }\n\n  resetGroupBoxes() {\n    this.qmcGroups = new Array();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/kv-diagram-entry.ts","import {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {KvDiagramEntry} from \"./kv-diagram-entry\";\nimport {KVDiagram} from \"./kvdiagram\";\nimport {KVDiagramSegment} from \"./kvdiagram-segment\";\nexport class KvDiagramGenerator {\n\n  private logicPhrase: LogicPhrase;\n\n  constructor(logicPhrase: LogicPhrase) {\n    this.logicPhrase = logicPhrase;\n  }\n\n  generateDiagramSegments(kvDiagram: KVDiagram) {\n    let newSegmentLength: number = 1;\n    let actualSegmentType: string = \"x\";\n    let segmentNameRow: number = 1;\n\n    let varName1Neg = new KVDiagramSegment(actualSegmentType, \"~\"+this.logicPhrase.varNames[0], 0, 0, false, segmentNameRow);\n    let varName1Pos = new KVDiagramSegment(actualSegmentType, this.logicPhrase.varNames[0], 1, 1, true, segmentNameRow);\n    kvDiagram.addSegment(varName1Neg);\n    kvDiagram.addSegment(varName1Pos);\n\n    for(let mirrorCount: number = 1; mirrorCount < this.logicPhrase.varCount(); mirrorCount++) {\n      if(actualSegmentType == \"x\") actualSegmentType = \"y\";\n      else actualSegmentType = \"x\"\n\n      //Mirror old segments of the acutal segmentType\n      let toAdd: KVDiagramSegment[] = Array();\n      for(let oldSegment of kvDiagram.segments) {\n        if(oldSegment.segmentType == actualSegmentType) {\n          let mirroredSegment = new KVDiagramSegment(\n            actualSegmentType,\n            oldSegment.varName,\n            newSegmentLength-1+(newSegmentLength-oldSegment.endPos),\n            newSegmentLength-1+(newSegmentLength-oldSegment.startPos),\n            oldSegment.positiv,\n            oldSegment.segmentNameRow\n          )\n          toAdd.push(mirroredSegment);\n        }\n      }\n      //Add mirroed segments\n      for(let newSegment of toAdd) kvDiagram.addSegment(newSegment);\n\n      //Add new segments\n      let varNameNeg = new KVDiagramSegment(actualSegmentType, \"~\"+this.logicPhrase.varNames[mirrorCount], 0, newSegmentLength-1, false, segmentNameRow);\n      let varNamePos = new KVDiagramSegment(actualSegmentType, this.logicPhrase.varNames[mirrorCount], newSegmentLength, (newSegmentLength*2)-1, true, segmentNameRow);\n      kvDiagram.addSegment(varNameNeg);\n      kvDiagram.addSegment(varNamePos);\n\n      if((mirrorCount % 2)== 1) {\n        newSegmentLength = newSegmentLength*2;\n        segmentNameRow++\n      }\n    }\n  }\n\n  generateKVDiagram(): KVDiagram {\n    let fields = Math.pow(2,this.logicPhrase.varCount())\n\n    let xLength = this.getXLength(this.logicPhrase.varCount());\n    let yLength = fields / xLength;\n\n    let kvDiagram = new KVDiagram();\n\n    this.generateDiagramSegments(kvDiagram);\n    this.optimizeDiagramSegments(kvDiagram);\n    let kvMatrix: KvDiagramEntry[][];\n    kvMatrix = this.generateMatrix(xLength, yLength);\n\n\n    kvDiagram.kvMatrix = kvMatrix;\n\n    return kvDiagram;\n\n  }\n\n  fillMatrix() {\n\n  }\n\n  private generateMatrix( xLength: number, yLength: number): KvDiagramEntry[][] {\n    let kvMatrix: KvDiagramEntry[][];\n    kvMatrix = Array();\n    for(let x = 0; x < xLength; x++) {\n      kvMatrix[x] = Array();\n      for(let y = 0; y < yLength; y++) {\n        kvMatrix[x][y] = new KvDiagramEntry(x,y);\n      }\n    }\n\n    return kvMatrix;\n  }\n\n  private getXLength(varCount: number) {\n    let steps:number = varCount/2;\n    let pot:number = Math.floor(steps) + (varCount%2)\n    return Math.pow(2,pot);\n  }\n\n  private optimizeDiagramSegments(kvDiagram: KVDiagram) {\n    for(let segment of kvDiagram.segments) {\n      for(let otherSegment of kvDiagram.segments) {\n        if(otherSegment != segment) {\n          if((segment.endPos+1) == otherSegment.startPos && segment.varName == otherSegment.varName) {\n            let betterSegment:KVDiagramSegment = new KVDiagramSegment(\n                segment.segmentType,\n                segment.varName,\n                segment.startPos,\n                otherSegment.endPos,\n                segment.positiv,\n                segment.segmentNameRow\n                );\n\n            //Delet bad segments\n            var index = kvDiagram.segments.indexOf(segment, 0);\n            if (index > -1) {\n              kvDiagram.segments.splice(index, 1);\n            }\n\n            index = kvDiagram.segments.indexOf(otherSegment, 0);\n            if (index > -1) {\n              kvDiagram.segments.splice(index, 1);\n            }\n\n            //Add better segment\n            kvDiagram.segments.push(betterSegment);\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/kv-diagram-generator.ts","export class KVDiagramSegment {\n\n  private _segmentType: string = \"\";\n  private _varName: string = \"\";\n  private _startPos: number = 0;\n  private _endPos: number = 0;\n  private _positiv: boolean = false;\n\n  private width: number = 50;\n  private _segmentNameRow: number;\n\n  constructor(segmentType: string, varName: string, startPos: number, endPos: number, positiv: boolean, segmentNameRow: number) {\n    this._positiv = positiv;\n    this._segmentType = segmentType;\n    this._varName = varName;\n    this._startPos = startPos;\n    this._endPos = endPos;\n    this._segmentNameRow = segmentNameRow;\n\n    if(this.startPos > this.endPos) {\n      let tmp = this.startPos;\n      this._startPos = this.endPos;\n      this._endPos = tmp;\n    }\n  }\n\n\n  get segmentNameRow(): number {\n    return this._segmentNameRow;\n  }\n\n  set segmentNameRow(value: number) {\n    this._segmentNameRow = value;\n  }\n\n  get positiv(): boolean {\n    return this._positiv;\n  }\n\n  set positiv(value: boolean) {\n    this._positiv = value;\n  }\n\n  get segmentType(): string {\n    return this._segmentType;\n  }\n\n  set segmentType(value: string) {\n    this._segmentType = value;\n  }\n\n  get varName(): string {\n    return this._varName;\n  }\n\n  set varName(value: string) {\n    this._varName = value;\n  }\n\n  get startPos(): number {\n    return this._startPos;\n  }\n\n\n  get endPos(): number {\n    return this._endPos;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, xLength:number, yLength:number) {\n    ctx.font = '25px sans-serif';\n    if(this.segmentType == \"x\") {\n      if(this.positiv) {\n        ctx.beginPath();\n        ctx.moveTo(this.startPos * this.width, yLength * this.width + 30 * this.segmentNameRow - 20);\n        ctx.lineTo(this.endPos * this.width + this.width, yLength * this.width + 30  * this.segmentNameRow - 20);\n        ctx.stroke();\n        ctx.fillText(this.varName, this.startPos * this.width, yLength * this.width + 30 * this.segmentNameRow, this.width);\n      }\n    } else {\n      if(this.positiv) {\n        ctx.beginPath();\n        ctx.moveTo((xLength - 1) * this.width + this.width * this.segmentNameRow + 10,this.startPos * this.width);\n        ctx.lineTo((xLength - 1) * this.width + this.width * this.segmentNameRow + 10,this.endPos * this.width+this.width);\n        ctx.stroke();\n        ctx.fillText(this.varName, (xLength - 1) * this.width + this.width * this.segmentNameRow + 15, this.startPos * this.width+25, this.width);\n      }\n    }\n  }\n\n  inSegment(x:number,y: number)\n  {\n    if(this.segmentType == \"x\") {\n      if(x > this.endPos || x < this.startPos) return false;\n    } else {\n      if(y > this.endPos || y < this.startPos) return false;\n    }\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/kvdiagram-segment.ts","import {LogicRootExpression} from \"./logic-root-expression\";\nimport {LogicNeg} from \"./logic-neg\";\nimport {LogicVar} from \"./logic-var\";\nimport {LogicAnd} from \"./logic-and\";\nimport {LogicOr} from \"./logic-or\";\n\nexport abstract class AbstractLogicExpression {\n\n  protected _logicChildExpressions: AbstractLogicExpression[] = Array();\n  protected rightAssociative = false;\n  protected _precedence = 0;\n  protected _parsed = false;\n  protected _expressionType = \"\";\n\n  get parsed(): boolean {\n    return this._parsed;\n  }\n\n  set parsed(value: boolean) {\n    this._parsed = value;\n  }\n\n  get expressionType(): string {\n    return this._expressionType;\n  }\n\n  set expressionType(value: string) {\n    this._expressionType = value;\n  }\n\n  get precedence(): number {\n    return this._precedence;\n  }\n\n  get logicChildExpressions(): AbstractLogicExpression[] {\n    return this._logicChildExpressions;\n  }\n\n  set logicChildExpressions(value: AbstractLogicExpression[]) {\n    this._logicChildExpressions = value;\n  }\n\n  abstract toString(): string\n  abstract phraseToString(): string\n\n  abstract getResult(): boolean\n\n  public add(oldVar: AbstractLogicExpression) {\n    this.logicChildExpressions.push(oldVar);\n  }\n\n  public isRightAssociative() {\n    if(this.rightAssociative) return true;\n    else return false;\n  }\n\n  public isLeftAssociative() {\n    if(!this.rightAssociative) return true;\n    else return false;\n  }\n\n  public precedenceLessOrEqual(otherOperand: AbstractLogicExpression) {\n    if(this._precedence <= otherOperand.precedence) return true;\n    else return false;\n  }\n\n  public precedenceLess(otherOperand: AbstractLogicExpression) {\n    if(this._precedence < otherOperand.precedence) return true;\n    else return false;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-expression-abstract.ts","///<reference path=\"kv-diagram-entry.ts\"/>\nimport {KVDiagramSegment} from \"./kvdiagram-segment\";\nimport  {KvDiagramEntry} from \"./kv-diagram-entry\"\nimport {ElementRef} from \"@angular/core\";\nimport {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {StringMethods} from \"../phrase/string-methods\";\nimport {Coordinate} from \"./coordinate\";\nimport {KVDiagramComponent} from \"../kvdiagram/kvdiagram.component\";\nimport {QMC} from \"../qmc/qmc\";\nimport {Group} from \"../qmc/group\";\nimport {GroupBox} from \"../qmc/group-box\";\n\nexport class KVDiagram {\n\n  private _segments: KVDiagramSegment[] = Array();\n  private _kvMatrix: KvDiagramEntry[][];\n  private lastMouseOnEntry: KvDiagramEntry;\n  private _kvDiagramComponent: KVDiagramComponent;\n  private qmc: QMC;\n  private qmcGroups: Group[] = new Array();\n\n  get kvDiagramComponent(): KVDiagramComponent {\n    return this._kvDiagramComponent;\n  }\n\n  set kvDiagramComponent(value: KVDiagramComponent) {\n    this._kvDiagramComponent = value;\n  }\n\n  addSegment(segment: KVDiagramSegment) {\n    this._segments.push(segment)\n  }\n\n  get segments(): KVDiagramSegment[] {\n    return this._segments;\n  }\n\n  get kvMatrix(): KvDiagramEntry[][] {\n    return this._kvMatrix;\n  }\n\n  set kvMatrix(value: KvDiagramEntry[][]) {\n    this._kvMatrix = value;\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        entry.kvDiagram = this;\n      }\n    }\n  }\n\n  fill(logicPhrase: LogicPhrase) {\n    let DNFs = logicPhrase.phrase.split(\"+\");\n    for(let DNF of DNFs) {\n      DNF = StringMethods.replaceAll(DNF, \"(\", \"\");\n      DNF = StringMethods.replaceAll(DNF, \")\", \"\");\n      DNF = StringMethods.replaceAll(DNF, \" \", \"\");\n      let vars = DNF.split(\"*\");\n\n      this.genCombinationTagsForEntries();\n\n      let coordinates: Coordinate[] = this.getCoordinate(vars);\n\n      for(let coordinate of coordinates) {\n        this.kvMatrix[coordinate.x][coordinate.y].value = 1;\n      }\n    }\n  }\n\n  draw(canvasRef: ElementRef) {\n    let ctx: CanvasRenderingContext2D =\n      canvasRef.nativeElement.getContext('2d');\n\n    ctx.clearRect(0,0,5000,5000);\n\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        entry.ctx = ctx;\n        entry.draw();\n      }\n    }\n\n    for(let segment of this.segments) {\n      segment.draw(ctx, this.kvMatrix.length, this.kvMatrix[0].length);\n    }\n  }\n\n  private getCoordinate(vars: string[]): Coordinate[] {\n\n    this.genCombinationTagsForEntries();\n    let coordinates: Coordinate[] = Array();\n\n    let segmentsRequired: KVDiagramSegment[] = new Array();\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        if(entry.combinationPartOfTag(vars)) {\n          coordinates.push(new Coordinate(entry.xPos, entry.yPos));\n        }\n      }\n    }\n    return coordinates;\n  }\n\n  private genCombinationTagsForEntries() {\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        entry.genCombinationTags(this._segments);\n      }\n    }\n  }\n\n  mouseOver(x: number, y: number) {\n    if(typeof this.kvMatrix[0][0] !== \"undefined\" ) {\n      let matrixX = Math.floor(x / this.kvMatrix[0][0].width);\n      let matrixY = Math.floor(y / this.kvMatrix[0][0].width);\n      if(matrixX < this.kvMatrix.length && matrixY < this.kvMatrix[0].length) {\n        if(typeof this.lastMouseOnEntry === \"undefined\") this.lastMouseOnEntry = this.kvMatrix[matrixX][matrixY];\n\n        if(this.lastMouseOnEntry != this.kvMatrix[matrixX][matrixY]) {\n          this.lastMouseOnEntry.mouseOn = false;\n          this.lastMouseOnEntry = this.kvMatrix[matrixX][matrixY];\n        }\n        this.lastMouseOnEntry.mouseOn = true;\n      }\n    }\n  }\n\n  clicked(x: number, y: number) {\n    if(typeof this.kvMatrix[0][0] !== \"undefined\" ) {\n      let matrixX = Math.floor(x / this.kvMatrix[0][0].width);\n      let matrixY = Math.floor(y / this.kvMatrix[0][0].width);\n      if(matrixX < this.kvMatrix.length && matrixY < this.kvMatrix[0].length) {\n        this.kvMatrix[matrixX][matrixY].clicked();\n      }\n    }\n  }\n\n  updatedMatrixValues() {\n    let newDnf = this.generateDNFOutOfMatrix();\n\n    this.kvDiagramComponent.updateDNF(newDnf);\n  }\n\n  public generateDNFOutOfMatrix() {\n    let dnf: string = \"\";\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        if(entry.value == 1) {\n          dnf += \" + \" + entry.getCombinationsAsString();\n        }\n      }\n    }\n    return dnf.substr(3);\n  }\n\n  newQMC(qmc: QMC) {\n    this.qmc = qmc;\n    this.createQMCGroups();\n    this.assignQMCGroups();\n    this.findGroupBoxes();\n  }\n\n  private assignQMCGroups() {\n    this.genCombinationTagsForEntries();\n    let coordinates: Coordinate[] = Array();\n\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        entry.resetGroupBoxes();\n      }\n    }\n\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        for(let group of this.qmcGroups) {\n          if (entry.combinationPartOfTag(group.primImplikant.vars)) {\n            entry.addGroupBox(new GroupBox(group));\n          }\n        }\n      }\n    }\n  }\n\n  private findGroupBoxes() {\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        entry.startEnlargeGroupBoxes();\n      }\n    }\n  }\n\n  private createQMCGroups() {\n    this.qmcGroups = new Array();\n    for(let group of this.qmc.bestCoverage) {\n      this.qmcGroups.push(new Group(this.genRandomColor(),group))\n    }\n  }\n\n  isOnDiagram(x: number, y: number) {\n    if(x < 0) return false;\n    if(y < 0) return false;\n    if(x >= this.kvMatrix.length) return false;\n    if(y >= this.kvMatrix[0].length) return false;\n    return true;\n  }\n\n  private genRandomColor(): string {\n    var color = \"rgb(\" + Math.floor(Math.random() * 255) + \",\" + Math.floor(Math.random() * 255) + \",\"\n      + Math.floor(Math.random() * 255) + \")\";\n\n    return color;\n  }\n\n  drawGroups(canvasRef: ElementRef) {\n    for(let group of this.qmcGroups) {\n      group.draw(canvasRef);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/kvdiagram.ts","import {Component, Input, OnInit} from '@angular/core';\nimport {BasicLogicPhraseParser} from \"../phrase/basic-logic-phrase-parser\";\nimport {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {BasicLogicPhraseInfoComponent} from \"../basic-logic-phrase-info/basic-logic-phrase-info.component\";\nimport {KVDiagramComponent} from \"../kvdiagram/kvdiagram.component\";\nimport {LogicRootExpression} from \"../logicExpression/logic-root-expression\";\nimport * as _ from 'lodash';\nimport {QMC} from \"../qmc/qmc\";\nimport {QMCVisualizerComponent} from \"../qmcvisualizer/qmcvisualizer.component\";\n\n@Component({\n  selector: 'app-logic-input',\n  templateUrl: './logic-input.component.html',\n  styleUrls: ['./logic-input.component.css'],\n  providers: [BasicLogicPhraseParser]\n})\nexport class LogicInputComponent implements OnInit {\n  @Input()\n  basicLogicPhraseInfoCom: BasicLogicPhraseInfoComponent;\n  @Input()\n  kvDiagramCom: KVDiagramComponent;\n  @Input()\n  qmcVisualizerCom: QMCVisualizerComponent;\n\n  logicPhraseString = \"(a+b)c\";\n  logicExtraVars = \"c d\";\n  private logicPhrase: LogicPhrase;\n  private logicDFPhrase: LogicPhrase;\n\n  constructor(private basicLogicPhraseParser: BasicLogicPhraseParser) { }\n\n  ngOnInit() {\n  }\n\n  parseLogicPhrase() {\n\n    this.kvDiagramCom.logicInputCom = this;\n\n    let separatedVariableString = this.separateVariables(this.logicPhraseString);\n\n    let logicRootExpression = new LogicRootExpression();\n    logicRootExpression.parseLogicString(separatedVariableString);\n\n    let logicExpressionInDF: LogicRootExpression = _.cloneDeep(logicRootExpression);\n    logicExpressionInDF.toDF();\n\n    this.basicLogicPhraseInfoCom.logicRootExpression = logicRootExpression;\n    this.basicLogicPhraseInfoCom.logicRootExpressionInDF = logicExpressionInDF;\n\n\n    this.logicDFPhrase = this.basicLogicPhraseParser.parse(logicExpressionInDF.phraseToStringWithoutBreakets(), this.logicExtraVars);\n    this.logicPhrase = this.basicLogicPhraseParser.parse(separatedVariableString, this.logicExtraVars);\n\n    this.basicLogicPhraseInfoCom.logicPhrase = this.logicPhrase;\n\n    this.kvDiagramCom.parse(this.logicDFPhrase);\n\n    this.updateDNF(this.kvDiagramCom.kvDiagram.generateDNFOutOfMatrix())\n\n    let qmc = new QMC();\n    qmc.simplify(this.basicLogicPhraseParser.parse(this.kvDiagramCom.kvDiagram.generateDNFOutOfMatrix(), this.logicExtraVars));\n\n    this.qmcVisualizerCom.newQMC(qmc);\n\n    this.basicLogicPhraseInfoCom.qmc = qmc;\n  }\n\n\n  updateDNF(newDnf: string) {\n    let logicRootExpression = new LogicRootExpression();\n    logicRootExpression.parseLogicString(newDnf);\n    this.basicLogicPhraseInfoCom.logicRootExpressionInDNF = logicRootExpression;\n\n    let qmc = new QMC();\n    qmc.simplify(this.basicLogicPhraseParser.parse(newDnf, this.logicExtraVars));\n\n    this.qmcVisualizerCom.newQMC(qmc);\n    this.kvDiagramCom.newQMC(qmc);\n    this.basicLogicPhraseInfoCom.qmc = qmc;\n  }\n\n  private separateVariables(oldString: string) {\n    var result = \"\";\n    var last = \"\";\n    for (var i = 0; i < oldString.length; i++) {\n      var curr = oldString.charAt(i);\n      if ((curr.match(/([a-zA-Z]+)/) != null || curr == \"~\") && last.match(/([a-zA-Z]+)/)) {\n        result += \"*\" + curr;\n      } else if((curr.match(/([\\(]+)/) != null || curr == \"~\") && last.match(/([a-zA-Z]+)/)) {\n        result += \"*\" + curr;\n      } else if((curr.match(/([a-zA-Z]+)/) != null || curr == \"~\") && last.match(/([\\)]+)/)) {\n        result += \"*\" + curr;\n      }else if((curr.match(/([\\(]+)/) != null || curr == \"~\") && last.match(/([\\)]+)/)) {\n        result += \"*\" + curr;\n      }else {\n        result += curr;\n      }\n      last = curr;\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logic-input/logic-input.component.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\nimport {LogicOr} from \"./logic-or\";\nimport {LogicAnd} from \"./logic-and\";\nimport {LogicNeg} from \"./logic-neg\";\nimport {LogicVar} from \"./logic-var\";\n\nexport class LogicTreeUtils {\n\n  public dissolveLogicAnd(actualLogicExpression: AbstractLogicExpression): AbstractLogicExpression {\n\n      if(actualLogicExpression instanceof LogicAnd) {\n        let logicConjunction = actualLogicExpression;\n        let var1 = logicConjunction.logicChildExpressions[0];\n        let var2 = logicConjunction.logicChildExpressions[1];\n\n        if(var1 instanceof LogicOr && var2 instanceof LogicOr) {\n          /*\n           * Do all this crazy stuff to have this result:\n           * (a+b)*(c+d) = (((ac+ad)+bc)+db)\n           *\n           * Because on or can only have two child expressions\n           */\n\n          let and1 = new LogicAnd();\n          and1.add(var1.logicChildExpressions[0]);\n          and1.add(var2.logicChildExpressions[0]);\n          let and2 = new LogicAnd();\n          and2.add(var1.logicChildExpressions[0]);\n          and2.add(var2.logicChildExpressions[1]);\n\n          let or1 = new LogicOr();\n          or1.add(and1);\n          or1.add(and2);\n\n          let and3 = new LogicAnd();\n          and3.add(var1.logicChildExpressions[1]);\n          and3.add(var2.logicChildExpressions[0]);\n\n          let or2 = new LogicOr();\n          or2.add(or1);\n          or2.add(and3);\n\n          let and4 = new LogicAnd();\n          and4.add(var1.logicChildExpressions[1]);\n          and4.add(var2.logicChildExpressions[1]);\n\n          let or3 = new LogicOr();\n          or3.add(or2);\n          or3.add(and4);\n\n          actualLogicExpression = or3;\n        }\n\n        else if(var1 instanceof LogicOr && var2 instanceof LogicVar) {\n          actualLogicExpression = new LogicOr();\n\n          let and1 = new LogicAnd();\n          and1.add(var2);\n          and1.add(var1.logicChildExpressions[0]);\n\n          let and2 = new LogicAnd();\n          and2.add(var2);\n          and2.add(var1.logicChildExpressions[1]);\n\n          actualLogicExpression.add(and1);\n          actualLogicExpression.add(and2);\n        }\n\n        else if(var2 instanceof LogicOr && var1 instanceof LogicVar) {\n          actualLogicExpression = new LogicOr();\n\n          let and1 = new LogicAnd();\n          and1.add(var1);\n          and1.add(var2.logicChildExpressions[0]);\n\n          let and2 = new LogicAnd();\n          and2.add(var1);\n          and2.add(var2.logicChildExpressions[1]);\n\n          actualLogicExpression.add(and1);\n          actualLogicExpression.add(and2);\n        }\n      }\n\n      for(let i = 0; i < actualLogicExpression.logicChildExpressions.length; i++) {\n        actualLogicExpression.logicChildExpressions[i] = this.dissolveLogicAnd(actualLogicExpression.logicChildExpressions[i]);\n      }\n      return actualLogicExpression;\n  }\n\n  public dissolveLogicNegs(actualLogicExpression: AbstractLogicExpression): AbstractLogicExpression {\n\n    if(actualLogicExpression.expressionType == \"~\") {\n\n      let logicConjunction = actualLogicExpression.logicChildExpressions[0];\n\n      let var1 = logicConjunction.logicChildExpressions[0];\n      let var2 = logicConjunction.logicChildExpressions[1];\n\n      if(logicConjunction.expressionType == \"*\") {\n        actualLogicExpression = new LogicOr();\n        actualLogicExpression.add(new LogicNeg(var1));\n        actualLogicExpression.add(new LogicNeg(var2));\n      }\n      else if(logicConjunction.expressionType == \"+\") {\n        actualLogicExpression = new LogicAnd();\n        actualLogicExpression.add(new LogicNeg(var1));\n        actualLogicExpression.add(new LogicNeg(var2));\n      }\n    }\n\n\n    for(let i = 0; i < actualLogicExpression.logicChildExpressions.length; i++) {\n      actualLogicExpression.logicChildExpressions[i] = this.dissolveLogicNegs(actualLogicExpression.logicChildExpressions[i]);\n    }\n\n\n    return actualLogicExpression;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-tree-utils.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\nimport {LogicVar} from \"./logic-var\";\nimport {LogicBracketOpen} from \"./logic-bracket-open\";\nimport {LogicBracketClose} from \"./logic-bracket-close\";\n\nexport class ShuntingYard {\n\n  public startAlgo(logicObjectPhrase: Array<AbstractLogicExpression>): Array<AbstractLogicExpression> {\n\n    let operands: Array<AbstractLogicExpression> = new Array<AbstractLogicExpression>();\n    let vars: Array<AbstractLogicExpression> = new Array<AbstractLogicExpression>();\n\n    for(let i = 0; i < logicObjectPhrase.length; i++) {\n      if(logicObjectPhrase[i] instanceof LogicVar) {\n        vars.push(logicObjectPhrase[i]);\n      }\n\n      else if(logicObjectPhrase[i] instanceof LogicBracketOpen) {\n        operands.push(logicObjectPhrase[i]);\n      }\n\n      else if(logicObjectPhrase[i] instanceof LogicBracketClose) {\n        while(operands.length != 0) {\n          let stackOperand = operands.pop();\n          if(stackOperand instanceof LogicBracketOpen) break;\n          vars.push(stackOperand);\n        }\n      }\n\n      else {\n        while(operands.length != 0) {\n          let stackOperand = operands.pop();\n          if(logicObjectPhrase[i].isLeftAssociative() && logicObjectPhrase[i].precedenceLessOrEqual(stackOperand)) {\n            vars.push(stackOperand);\n          } else if(logicObjectPhrase[i].isRightAssociative() && logicObjectPhrase[i].precedenceLess(stackOperand)) {\n            vars.push(stackOperand);\n          } else {\n            operands.push(stackOperand);\n            break;\n          }\n        }\n        operands.push(logicObjectPhrase[i]);\n      }\n\n    }\n\n    while(operands.length != 0) {\n      let stackOperand = operands.pop();\n      vars.push(stackOperand);\n    }\n\n    return vars;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/shunting-yard.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navbar/navbar.component.ts","import { Injectable } from '@angular/core';\nimport {LogicPhrase} from \"./logic-phrase\";\nimport {StringMethods} from \"./string-methods\";\n\n@Injectable()\nexport class BasicLogicPhraseParser {\n\n  private logicPhrase = \"\";\n  private keyChars:string[] = ['(',')','+','~','*'];\n\n  /**\n   * @brief parses the logicPhraseString and returns basic information\n   * @param phrase\n   * @returns {LogicPhrase}\n   */\n  parse(phrase: string, extraVars: string): LogicPhrase {\n    let length = phrase.length;\n\n    phrase = StringMethods.replaceAll(phrase, \" \", \"\");\n\n    let varNames = this.getVarNames(phrase,extraVars);\n\n    let logicPhrase = new LogicPhrase(length, varNames, phrase);\n    return logicPhrase;\n  }\n\n  /**\n   * @brief returns all names of the included Variables (Anything between the keyChars)\n   * @param phrase\n   * @returns {string[]}\n   */\n  getVarNames(phrase: string, extraVars: string): string[] {\n    let varNames:string[] = new Array();\n\n    //Parse the extraVars\n    for(let varName of extraVars.split(\" \")) {\n      if(varName != \"\") varNames.push(varName);\n    }\n\n    //Parse the phrase\n    let actualName: string = \"\";\n    for(let char of phrase) {\n      if(this.keyChars.includes(char)) {\n        if(!varNames.includes(actualName) && actualName != \"\") {\n          varNames.push(actualName);\n        }\n        actualName = \"\";\n      } else {\n        actualName += char;\n      }\n    }\n    if(actualName != \"\" && !varNames.includes(actualName)) {\n      varNames.push(actualName);\n    }\n\n    varNames.sort(function(a, b){\n      if(a < b) return -1;\n      if(a > b) return 1;\n      return 0;\n    })\n    return varNames;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/phrase/basic-logic-phrase-parser.ts","import {Group} from \"./group\";\nimport {Coordinate} from \"../kv-diagram-model/coordinate\";\nimport {ElementRef} from \"@angular/core\";\nexport class GroupBox {\n\n  private _point1: Coordinate = new Coordinate(0,0);\n  private _point2: Coordinate = new Coordinate(0,0);\n  private _assignedGroup: Group;\n  public generalWidth: number = 50;\n\n\n  constructor(assignedGroup: Group) {\n    this._assignedGroup = assignedGroup;\n  }\n\n  get point1(): Coordinate {\n    return this._point1;\n  }\n\n  set point1(value: Coordinate) {\n    this._point1 = value;\n  }\n\n  get point2(): Coordinate {\n    return this._point2;\n  }\n\n  set point2(value: Coordinate) {\n    this._point2 = value;\n  }\n\n  get assignedGroup(): Group {\n    return this._assignedGroup;\n  }\n\n  set assignedGroup(value: Group) {\n    this._assignedGroup = value;\n  }\n\n  draw(canvasRef: ElementRef) {\n    let ctx: CanvasRenderingContext2D =\n      canvasRef.nativeElement.getContext('2d');\n\n    let width = this.point2.x - this.point1.x+1;\n    let height = this.point2.y - this.point1.y+1;\n    ctx.fillStyle = this.assignedGroup.color;\n    ctx.strokeStyle = this.assignedGroup.color;\n    ctx.lineWidth = 4;\n    this.roundRect(ctx,(this.point1.x*this.generalWidth)+4,(this.point1.y*this.generalWidth)+4,(width*this.generalWidth)-8,(height*this.generalWidth)-8,5,false,true);\n    ctx.fillStyle = \"black\";\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 1;\n\n  }\n\n  /**\n   * Draws a rounded rectangle using the current state of the canvas.\n   * If you omit the last three params, it will draw a rectangle\n   * outline with a 5 pixel border radius\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} x The top left x coordinate\n   * @param {Number} y The top left y coordinate\n   * @param {Number} width The width of the rectangle\n   * @param {Number} height The height of the rectangle\n   * @param {Number} [radius = 5] The corner radius; It can also be an object\n   *                 to specify different radii for corners\n   * @param {Number} [radius.tl = 0] Top left\n   * @param {Number} [radius.tr = 0] Top right\n   * @param {Number} [radius.br = 0] Bottom right\n   * @param {Number} [radius.bl = 0] Bottom left\n   * @param {Boolean} [fill = false] Whether to fill the rectangle.\n   * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n   */\n  private roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n  if (typeof stroke == 'undefined') {\n    stroke = true;\n  }\n  if (typeof radius === 'undefined') {\n    radius = 5;\n  }\n  if (typeof radius === 'number') {\n    radius = {tl: radius, tr: radius, br: radius, bl: radius};\n  } else {\n    var defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0};\n    for (var side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side];\n    }\n  }\n  ctx.beginPath();\n  ctx.moveTo(x + radius.tl, y);\n  ctx.lineTo(x + width - radius.tr, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n  ctx.lineTo(x + width, y + height - radius.br);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n  ctx.lineTo(x + radius.bl, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n  ctx.lineTo(x, y + radius.tl);\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n  ctx.closePath();\n  if (fill) {\n    ctx.fill();\n  }\n  if (stroke) {\n    ctx.stroke();\n  }\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/qmc/group-box.ts","import {Primimplikante} from \"./primimplikante\";\nimport {GroupBox} from \"./group-box\";\nimport {ElementRef} from \"@angular/core\";\nexport class Group {\n\n  private _color: string = \"\";\n  private _primImplikant: Primimplikante;\n  private _underGroups: GroupBox[] = new Array();\n\n\n  constructor(color: string, primImplikant: Primimplikante) {\n    this._color = color;\n    this._primImplikant = primImplikant;\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  set color(value: string) {\n    this._color = value;\n  }\n\n  get primImplikant(): Primimplikante {\n    return this._primImplikant;\n  }\n\n  set primImplikant(value: Primimplikante) {\n    this._primImplikant = value;\n  }\n\n  get underGroups(): GroupBox[] {\n    return this._underGroups;\n  }\n\n  set underGroups(value: GroupBox[]) {\n    this._underGroups = value;\n  }\n\n  draw(canvasRef: ElementRef) {\n    for(let underGroup of this.underGroups) {\n      underGroup.draw(canvasRef);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/qmc/group.ts","import {StringMethods} from \"../phrase/string-methods\";\nimport {forEach} from \"@angular/router/src/utils/collection\";\nexport class Primimplikante {\n\n\n  private _vars: string[] = new Array();\n  private _amountOfPositivVars: number = 0;\n  private onlyPositivars: string[] = new Array();\n  private _usedForCombination = false;\n  private _decEquivalents: number[] = Array();\n\n\n  constructor(varNames: string[], decEquivalents: number[] = new Array()) {\n\n    this._decEquivalents = decEquivalents;\n\n    for(let varName of varNames) {\n\n      this._vars.push(varName);\n      this.onlyPositivars.push(StringMethods.replaceAll(varName,\"~\",\"\"));\n\n      if(!(varName.indexOf(\"~\") >= 0)) this._amountOfPositivVars++;\n    }\n\n    if(this._decEquivalents.length == 0) this.genDecEquivalent();\n  }\n\n\n  public toString() {\n    let string= \"\";\n    for(let vars of this._vars) {\n      string += vars;\n    }\n\n    return string;\n  }\n\n  public getDcEquivalentsString() {\n    let string= \"\";\n    for(let vars of this.decEquivalents) {\n      string += vars+\" \";\n    }\n\n    return string;\n  }\n\n  get vars(): string[] {\n    return this._vars;\n  }\n\n  get decEquivalents(): number[] {\n    return this._decEquivalents;\n  }\n\n  get usedForCombination(): boolean {\n    return this._usedForCombination;\n  }\n\n  set usedForCombination(value: boolean) {\n    this._usedForCombination = value;\n  }\n\n  get amountOfPositivVars(): number {\n    return this._amountOfPositivVars;\n  }\n\n  /**\n   * @brief returns a simplification of both primimplikante or null if you cant combine them\n   * @param primimplikante2\n   */\n  public combine(primimplikante2: Primimplikante): Primimplikante {\n    let hammingDistance = 0;\n    let varsOfNewPrimimplikante = Array();\n\n    if(!this.representSameVars(primimplikante2)) return null;\n\n    for(let varName of this._vars) {\n      for(let varName2 of primimplikante2._vars) {\n\n        if(this.sameVar(varName,varName2)) {\n          if(varName2 == varName) {\n            varsOfNewPrimimplikante.push(varName);\n          }\n          else {\n            hammingDistance++;\n          }\n        }\n\n      }\n    }\n\n    let decEquivalents: number[] = this.decEquivalents.concat(primimplikante2.decEquivalents);\n    if(hammingDistance == 1) return new Primimplikante(varsOfNewPrimimplikante,decEquivalents);\n    return null;\n  }\n\n  private sameVar(varName: string, varName2: string): boolean {\n    let varN2 = StringMethods.replaceAll(varName2,\"~\",\"\");\n    let varN = StringMethods.replaceAll(varName,\"~\",\"\");\n\n    if(varN == varN2) return true;\n    return false;\n  }\n\n  private representSameVars(primimplikante2: Primimplikante) {\n    for(let varN of this.onlyPositivars) {\n      if(primimplikante2.onlyPositivars.indexOf(varN) == -1) return false;\n    }\n\n    return true;\n  }\n\n  private sortVars() {\n    this._vars = this._vars.sort((n1, n2) => {\n      n1 = StringMethods.replaceAll(n1,\"~\",\"\");\n      n2 = StringMethods.replaceAll(n2,\"~\",\"\");\n      if (n1 > n2) {\n        return 1;\n      }\n\n      if (n1 < n2) {\n        return -1;\n      }\n\n      return 0;\n    })\n  }\n\n  genDecEquivalent() {\n    this.sortVars();\n    this._decEquivalents[0] = 0;\n    let exponent = 0;\n    for(let varName of this._vars) {\n      if(varName.indexOf(\"~\") == -1) this._decEquivalents[0] += 2 ** exponent;\n      exponent++;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/qmc/primimplikante.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".colMargin{\\n  margin-bottom: 15px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 233\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.css\n// module id = 234\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/kvdiagram/kvdiagram.component.css\n// module id = 235\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logic-input/logic-input.component.css\n// module id = 236\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.css\n// module id = 237\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/qmcvisualizer/qmcvisualizer.component.css\n// module id = 238\n// module chunks = 1","export class StringMethods {\n\n  public static replaceAll(str, find, replace) {\n    return str.replace(new RegExp(this.escapeRegExp(find), 'g'), replace);\n  }\n\n  public static escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  }\n\n  public static cleanUpDNF(phrase: string): string {\n    phrase = StringMethods.replaceAll(phrase,\" \",\"\");\n    phrase = StringMethods.replaceAll(phrase,\"(\",\"\");\n    phrase = StringMethods.replaceAll(phrase,\")\",\"\");\n    return phrase;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/phrase/string-methods.ts","module.exports = \"\\n<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <br>\\n  <h1>\\n    {{welcomeMessage}}\\n  </h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 colMargin\\\">\\n      <app-logic-input\\n        #logicInput\\n        [kvDiagramCom]=\\\"kvDiagramCom\\\"\\n        [basicLogicPhraseInfoCom]=\\\"basicLogicPhraseInfoCom\\\"\\n        [qmcVisualizerCom]=\\\"qcmvisualizercom\\\">\\n      </app-logic-input>\\n    </div>\\n    <div class=\\\"col-12 colMargin\\\"><app-basic-logic-phrase-info #basicLogicPhraseInfoCom></app-basic-logic-phrase-info></div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 colMargin\\\"><app-kvdiagramm #kvDiagramCom> </app-kvdiagramm></div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 colMargin\\\"><app-qmcvisualizer #qcmvisualizercom> </app-qmcvisualizer></div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 240\n// module chunks = 1","module.exports = \"\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-block\\\">\\n      <h4 class=\\\"card-title\\\">Information</h4>\\n      <table class=\\\"table table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th>Key</th>\\n            <th>Data</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <th scope=\\\"row\\\">Ausdruck</th>\\n            <td>{{logicPhrase.phrase}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Länge</th>\\n            <td>{{logicPhrase.lengh}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Variablen Namen</th>\\n            <td>{{logicPhrase.varNames.toString()}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">DF</th>\\n            <td>{{logicRootExpressionInDF.phraseToStringWithoutBreakets()}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Vereinfachte DF</th>\\n            <td>{{qmc.getMinmalFormAsString()}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">DNF</th>\\n            <td>{{logicRootExpressionInDNF.phraseToStringWithoutBreakets()}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Parsed tree</th>\\n            <td>{{logicRootExpression.phraseToString()}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Shunting Yard</th>\\n            <td>{{logicRootExpression.shuntedPhrase.toString()}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.html\n// module id = 241\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-block\\\">\\n    <h4 class=\\\"card-title\\\">KV Diagramm</h4>\\n    <canvas (click)=\\\"cklickedCanvas($event)\\\" (mousemove)=\\\"canvasMouseMove($event)\\\"  (mouseenter)=\\\"canvasMouseEnter()\\\" (mouseleave)=\\\"canvasMouseLeave()\\\"\\n            #kvDiagramCanvas width=\\\"1000\\\" height=\\\"800\\\">\\n    </canvas>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/kvdiagram/kvdiagram.component.html\n// module id = 242\n// module chunks = 1","module.exports = \"\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-block\\\">\\n      <h4 class=\\\"card-title\\\">Logische Eingabe</h4>\\n      <p class=\\\"card-text\\\">Trage hier die logischen Verknüpfungen ein</p>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"logicPhrase\\\" class=\\\"col-2 col-form-label\\\">Logischer Ausdruck</label>\\n        <div class=\\\"col-10\\\">\\n          <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"logicPhraseString\\\" type=\\\"textarea\\\" value=\\\"\\\" id=\\\"logicPhrase\\\" >\\n          </textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"logicPhrase\\\" class=\\\"col-2 col-form-label\\\">Zusätzliche Variablen</label>\\n        <div class=\\\"col-10\\\">\\n          <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"logicExtraVars\\\" type=\\\"textarea\\\" value=\\\"\\\" id=\\\"logicExtraVars\\\">\\n          </textarea>\\n        </div>\\n\\n        <div class=\\\"col-12\\\">\\n          Hier kannst du zusätzliche Variablen angeben, falls der Logische Ausdruck nicht in der DNF sondern nur in  der DF ist.\\n          (Trenne über \\\" \\\")\\n        </div>\\n\\n      </div>\\n      <div class=\\\"row\\\">\\n        <br>\\n        <div class=\\\"col-4\\\">\\n          <button type=\\\"button\\\" (click)=\\\"parseLogicPhrase()\\\"  class=\\\"btn btn-primary\\\">Parse</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logic-input/logic-input.component.html\n// module id = 243\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-toggleable-md navbar-light bg-faded\\\">\\n  <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">KV-Toolbox</a>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.html\n// module id = 244\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-block\\\">\\n    <h4 class=\\\"card-title\\\">QMC</h4>\\n\\n    <div class=\\\"row\\\">\\n      <h5 class=\\\"col-md-12\\\">Vereinfachungstabelle</h5>\\n      <ng-container *ngFor= \\\"let table of qmc.simplificationTable; let myIndex = index\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr scope=\\\"row\\\">\\n                <th>Group</th>\\n                <th>DCEq.</th>\\n                <th>Prim.</th>\\n                <th>Used</th>\\n              </tr>\\n            </thead>\\n\\n            <tbody>\\n              <ng-container *ngFor= \\\"let group of table let groupIndex = index\\\">\\n                <ng-container *ngFor= \\\"let primeImplicant of group\\\">\\n                  <ng-container></ng-container>\\n                  <tr class=\\\"{{getTableBackground(groupIndex)}}\\\" scope=\\\"row\\\">\\n                    <th>\\n                      {{groupIndex}}\\n                    </th>\\n                    <td>\\n                      {{primeImplicant.getDcEquivalentsString()}}\\n                    </td>\\n                    <td>\\n                      {{primeImplicant.toString()}}\\n                    </td>\\n                    <td>\\n                      <ng-container *ngIf=\\\"primeImplicant._usedForCombination\\\">\\n                        &#10004;\\n                      </ng-container>\\n                      <ng-container *ngIf=\\\"!primeImplicant._usedForCombination\\\">\\n                        &#10008;\\n                      </ng-container>\\n                    </td>\\n                  </tr>\\n                </ng-container>\\n              </ng-container>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <h5 class=\\\"col-md-12\\\">Auswahl der wesentlichen Primimplikanten</h5>\\n      <div class=\\\"col-md-4\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <thead>\\n          <tr scope=\\\"row\\\">\\n            <th>Prim/DCEq</th>\\n            <ng-container *ngFor=\\\"let dcEq of qmc.existingDcEquivalebnts\\\">\\n              <th>{{dcEq}}</th>\\n            </ng-container>\\n          </tr>\\n          </thead>\\n\\n          <tbody>\\n            <ng-container *ngFor=\\\"let prim of qmc.restMatrix; let indexI = index\\\">\\n                <tr scope=\\\"row\\\">\\n                  <td class=\\\"{{getEssentialPrimBackground(indexI)}}\\\">\\n                    {{qmc.notCombinedPrimimplikanten[indexI]}}\\n                  </td>\\n                  <ng-container *ngFor=\\\"let dcEq of prim; let dcEqNumber = index\\\">\\n                    <ng-container *ngIf=\\\"dcEq\\\">\\n                      <td class=\\\"{{getEssentialPrimDcBackground(dcEqNumber)}}\\\">\\n                        {{dcEq}}\\n                      </td>\\n                    </ng-container>\\n\\n                  </ng-container>\\n                </tr>\\n            </ng-container>\\n          </tbody>\\n\\n        </table>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <h5 class=\\\"col-md-12\\\">Minimale Form</h5>\\n      <div class=\\\"col-md-4\\\">\\n        {{this.qmc.getMinmalFormAsString()}}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/qmcvisualizer/qmcvisualizer.component.html\n// module id = 245\n// module chunks = 1","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\n\nexport class LogicVar extends AbstractLogicExpression {\n\n  private _value: boolean = false;\n  private _name: string = \"\";\n  protected _parsed = true;\n\n\n  constructor(name: string) {\n    super();\n    this._name = name;\n  }\n\n  get value(): boolean {\n    return this._value;\n  }\n\n  set value(value: boolean) {\n    this._value = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  public toString(): string {\n    return this._name;\n  }\n\n  phraseToString(): string {\n    return this._name;\n  }\n\n  public getResult(): boolean {\n    return this._value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-var.ts","import {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {Primimplikante} from \"./primimplikante\";\nimport {StringMethods} from \"../phrase/string-methods\";\nimport {analyzeAndValidateNgModules} from \"@angular/compiler\";\nimport * as _ from 'lodash';\nimport {AbstractWalker} from \"tslint\";\n\nexport class QMC {\n\n  private _simplificationTable: Primimplikante[][][];\n  private _notCombinedPrimimplikanten: Primimplikante[] = new Array();\n  private _restMatrix: string[][] = new Array();\n  private _existingDcEquivalebnts: number[];\n  private _essentialPrimeImplicants: Primimplikante[] = new Array();\n  private actualPrimeImplicantCombination: Primimplikante[];\n  private _neededDcEquivalents: number[] = new Array();\n  private _bestCoverage: Primimplikante[] = new Array();\n  private _notEssentialDcEquivalents: number[] = Array();\n\n\n  get simplificationTable(): Primimplikante[][][] {\n    return this._simplificationTable;\n  }\n\n\n  get notEssentialDcEquivalents(): number[] {\n    return this._notEssentialDcEquivalents;\n  }\n\n  get notCombinedPrimimplikanten(): Primimplikante[] {\n    return this._notCombinedPrimimplikanten;\n  }\n\n  get restMatrix(): string[][] {\n    return this._restMatrix;\n  }\n\n  get essentialPrimeImplicants(): Primimplikante[] {\n    return this._essentialPrimeImplicants;\n  }\n\n  get neededDcEquivalents(): number[] {\n    return this._neededDcEquivalents;\n  }\n\n  get bestCoverage(): Primimplikante[] {\n    return this._bestCoverage;\n  }\n\n\n  get existingDcEquivalebnts(): number[] {\n    return this._existingDcEquivalebnts;\n  }\n\n  public simplify(logicPhrase: LogicPhrase): string {\n\n    this.initSimplificationTable(logicPhrase.varCount());\n    this.generatePrimimplikante(logicPhrase.phrase);\n\n    let round = 1;\n    while(true) {\n      let newColume = this.combinePrimimplikants(round, logicPhrase.varCount());\n      this.findNotCombinedPrimimplikantes(round-1);\n      if(!newColume) {\n        this.simplificationTable.pop();\n        break;\n      }\n      round++;\n    }\n\n    this.findMinimalExpression();\n\n    return \"\";\n  }\n\n\n  private generatePrimimplikante(phrase: string) {\n    phrase = StringMethods.cleanUpDNF(phrase);\n    let conjunctionTerms = phrase.split(\"+\");\n\n    for(let conjunctionTerm of conjunctionTerms) {\n      let varNames = conjunctionTerm.split(\"*\");\n      let primiplikant = new Primimplikante(varNames);\n      let amountPositivVars = primiplikant.amountOfPositivVars;\n      this._simplificationTable[0][amountPositivVars].push(primiplikant);\n    }\n  }\n\n  private initSimplificationTable(amountVars: number) {\n    this._simplificationTable = new Array();\n    this._simplificationTable[0] = new Array();\n\n    for(let i = 0; i <= amountVars; i++) {\n      this._simplificationTable[0][i] = new Array();\n    }\n  }\n\n  /**\n   *\n   * @param round\n   * @return returns true if it created a new colume in the simplificationTable\n   */\n  private combinePrimimplikants(round: number, amountVars: number): boolean {\n    this._simplificationTable[round] = new Array();\n    let newColume = false;\n\n    for(let i = 0; i <= amountVars-round; i++) {\n      this._simplificationTable[round][i] = new Array();\n    }\n\n    for(let amountClassIndex = 0; amountClassIndex < this._simplificationTable[round-1].length; amountClassIndex++) {\n      for(let primimplikante of this._simplificationTable[round-1][amountClassIndex]) {\n\n        if (typeof this._simplificationTable[round - 1][amountClassIndex + 1] !== \"undefined\") {\n          for (let primimplikante2 of this._simplificationTable[round - 1][amountClassIndex + 1]) {\n\n            let newPrimimplikante = primimplikante.combine(primimplikante2);\n            if(newPrimimplikante != null){\n              newColume = true;\n              if(!this.allreadyExist(newPrimimplikante,this._simplificationTable[round][amountClassIndex])) {\n                this._simplificationTable[round][amountClassIndex].push(newPrimimplikante);\n              }\n              primimplikante2.usedForCombination = true;\n              primimplikante.usedForCombination = true;\n            }\n          }\n        }\n      }\n    }\n    return newColume;\n  }\n\n  private findNotCombinedPrimimplikantes(round: number) {\n    for(let amountClass of this._simplificationTable[round]) {\n      for(let primim of amountClass) {\n        if(!primim.usedForCombination) this._notCombinedPrimimplikanten.push(primim);\n      }\n    }\n  }\n\n  private findMinimalExpression() {\n    this.generateRestMatrix();\n    this.findEssentialPrimeImplicants();\n    this.actualPrimeImplicantCombination = _.cloneDeep(this._essentialPrimeImplicants);\n\n    /**\n     * lets start to solve the NP-complete problem XD\n     * calculate slave\n     */\n    this._bestCoverage = this.findBestCovareg(this._neededDcEquivalents,this._essentialPrimeImplicants,_.cloneDeep(this._essentialPrimeImplicants));\n  }\n\n  private generateRestMatrix() {\n    this.existingDcEquivalents();\n    let i = 0;\n    for(let primeImplicant of this._notCombinedPrimimplikanten) {\n      this._restMatrix[i] = new Array();\n      for(let dcEquivalent of this._existingDcEquivalebnts) {\n        if(primeImplicant.decEquivalents.indexOf(dcEquivalent) != -1) this._restMatrix[i][dcEquivalent] = \"x\";\n        else this._restMatrix[i][dcEquivalent] = \" \";\n      }\n      i++;\n    }\n  }\n\n  private findEssentialPrimeImplicants() {\n    for(let dcEquivalent of this._existingDcEquivalebnts) {\n      let amountOfCovareg = 0;\n      let lastCoverPrimeImplicant = 0;\n      let i;\n      for(i = 0; i < this._notCombinedPrimimplikanten.length; i++) {\n        if(this._restMatrix[i][dcEquivalent] == \"x\") {\n          amountOfCovareg++;\n          lastCoverPrimeImplicant = i;\n        }\n      }\n      if(amountOfCovareg == 1) {\n        if(this.essentialPrimeImplicants.indexOf(this._notCombinedPrimimplikanten[lastCoverPrimeImplicant]) == -1) {\n          this._essentialPrimeImplicants.push(this._notCombinedPrimimplikanten[lastCoverPrimeImplicant]);\n        }\n      }\n      else {\n        this._neededDcEquivalents.push(dcEquivalent);\n        this._notEssentialDcEquivalents.push(dcEquivalent);\n      }\n    }\n\n    //Delete all covered dcEquivalents\n    for(let implicant of this._essentialPrimeImplicants) {\n      for(let dcEquivalent of implicant.decEquivalents) {\n        var index = this._neededDcEquivalents.indexOf(dcEquivalent, 0);\n        if (index > -1) {\n          this._neededDcEquivalents.splice(index, 1);\n        }\n      }\n    }\n  }\n\n  private existingDcEquivalents() {\n    this._existingDcEquivalebnts = new Array();\n    for(let primeImplicant of this._notCombinedPrimimplikanten) {\n      for(let dcEquivalent of primeImplicant.decEquivalents) {\n        if(this._existingDcEquivalebnts.indexOf(dcEquivalent) == -1) this._existingDcEquivalebnts.push(dcEquivalent);\n      }\n    }\n    this._existingDcEquivalebnts.sort((n1,n2) => {\n      if (n1 > n2) {\n        return 1;\n      }\n\n      if (n1 < n2) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  private findBestCovareg(neededDcEquivalents: number[], usedPrimImplicants: Primimplikante[], any: Primimplikante[]): Primimplikante[] {\n    let dcEquivalentToCover = neededDcEquivalents.pop();\n    neededDcEquivalents.push(dcEquivalentToCover);\n    let amountOfPrimeImplicants = 99999999999999999999;\n\n    if(neededDcEquivalents.length == 0) return usedPrimImplicants;\n\n    for(let onePrimeImplicant of this._notCombinedPrimimplikanten) {\n      if(onePrimeImplicant.decEquivalents.indexOf(dcEquivalentToCover) != -1) {\n\n        let newNeededDcEquivalents = _.cloneDeep(neededDcEquivalents);\n        for(let dcEquivalent of onePrimeImplicant.decEquivalents) {\n          var index = newNeededDcEquivalents.indexOf(dcEquivalent, 0);\n          if (index > -1) {\n            newNeededDcEquivalents.splice(index, 1);\n          }\n        }\n\n        let newNeededPrimImplicants = _.cloneDeep(usedPrimImplicants);\n        newNeededPrimImplicants.push(onePrimeImplicant);\n        let acutalUsedPrimImplicants = this.findBestCovareg(newNeededDcEquivalents, newNeededPrimImplicants, any);\n        if(amountOfPrimeImplicants >= acutalUsedPrimImplicants.length) {\n          amountOfPrimeImplicants = acutalUsedPrimImplicants.length\n          usedPrimImplicants = acutalUsedPrimImplicants;\n        }\n      }\n    }\n\n    return usedPrimImplicants;\n  }\n\n  private allreadyExist(newPrimimplikante: Primimplikante, param2: Primimplikante[]) {\n    for(let prim of param2) {\n      if(prim.toString() == newPrimimplikante.toString()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getMinmalFormAsString() {\n    let string = \"\";\n    for(let prim of this.bestCoverage) {\n      string += \" \"+prim.toString()+\" +\";\n    }\n\n    string = string.substring(0, string.length - 1);\n\n    return string;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/qmc/qmc.ts"],"sourceRoot":""}