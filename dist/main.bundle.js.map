{"version":3,"sources":["webpack:///./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.ts","webpack:///./src/app/kvdiagram/kvdiagram.component.ts","webpack:///./src/app/logicExpression/logic-and.ts","webpack:///./src/app/logicExpression/logic-bracket-close.ts","webpack:///./src/app/logicExpression/logic-bracket-open.ts","webpack:///./src/app/logicExpression/logic-neg.ts","webpack:///./src/app/logicExpression/logic-or.ts","webpack:///./src/app/logicExpression/logic-root-expression.ts","webpack:///./src/app/phrase/logic-phrase.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/logicExpression/logic-expression-abstract.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/kv-diagram-model/coordinate.ts","webpack:///./src/app/kv-diagram-model/kv-diagram-entry.ts","webpack:///./src/app/kv-diagram-model/kv-diagram-generator.ts","webpack:///./src/app/kv-diagram-model/kvdiagram-segment.ts","webpack:///./src/app/kv-diagram-model/kvdiagram.ts","webpack:///./src/app/logic-input/logic-input.component.ts","webpack:///./src/app/logicExpression/logic-tree-utils.ts","webpack:///./src/app/logicExpression/shunting-yard.ts","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/phrase/basic-logic-phrase-parser.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.css","webpack:///./src/app/kvdiagram/kvdiagram.component.css","webpack:///./src/app/logic-input/logic-input.component.css","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.html","webpack:///./src/app/kvdiagram/kvdiagram.component.html","webpack:///./src/app/logic-input/logic-input.component.html","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/logicExpression/logic-var.ts","webpack:///./src/app/phrase/string-methods.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {LogicRootExpression} from \"../logicExpression/logic-root-expression\";\nimport {StringMethods} from \"../phrase/string-methods\";\n\n@Component({\n  selector: 'app-basic-logic-phrase-info',\n  templateUrl: './basic-logic-phrase-info.component.html',\n  styleUrls: ['./basic-logic-phrase-info.component.css'],\n})\nexport class BasicLogicPhraseInfoComponent implements OnInit {\n\n  private _logicPhrase: LogicPhrase = new LogicPhrase(0, [], \"\");\n  private _logicRootExpression: LogicRootExpression = new LogicRootExpression();\n  private _logicRootExpressionInDNF: LogicRootExpression = new LogicRootExpression();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  set logicPhrase(value: LogicPhrase) {\n    this._logicPhrase = value\n  }\n\n\n  get logicPhrase(): LogicPhrase {\n    return this._logicPhrase;\n  }\n\n  get logicRootExpressionInDNF(): LogicRootExpression {\n    return this._logicRootExpressionInDNF;\n  }\n\n  set logicRootExpressionInDNF(value: LogicRootExpression) {\n    this._logicRootExpressionInDNF = value;\n  }\n\n  get logicRootExpression(): LogicRootExpression {\n    return this._logicRootExpression;\n  }\n\n  set logicRootExpression(value: LogicRootExpression) {\n    this._logicRootExpression = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.ts","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {KVDiagram} from \"../kv-diagram-model/kvdiagram\";\nimport {KvDiagramGenerator} from \"../kv-diagram-model/kv-diagram-generator\";\nimport {KvDiagramEntry} from \"../kv-diagram-model/kv-diagram-entry\";\n\n@Component({\n  selector: 'app-kvdiagramm',\n  templateUrl: './kvdiagram.component.html',\n  styleUrls: ['./kvdiagram.component.css']\n})\nexport class KVDiagramComponent implements OnInit {\n\n  @ViewChild('kvDiagramCanvas') canvasRef: ElementRef;\n  private kvDiagram: KVDiagram;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  parse(logicPhrase: LogicPhrase) {\n\n    let generator = new KvDiagramGenerator(logicPhrase);\n    this.kvDiagram = generator.generateKVDiagram();\n    this.kvDiagram.fill(logicPhrase);\n\n    this.kvDiagram.draw(this.canvasRef);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kvdiagram/kvdiagram.component.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\n\nexport class LogicAnd extends AbstractLogicExpression {\n\n  protected rightAssociative = false;\n  protected _precedence = 2;\n  protected _expressionType = \"*\";\n\n  public toString(): string {\n    return \"*\";\n  }\n\n  public phraseToString(): string {\n    let result: string = \"(\";\n    for(let expression of this.logicChildExpressions) {\n      result += expression.phraseToString() +  \"*\";\n    }\n    result = result.substring(0, result.length - 1);\n    result += \")\";\n\n    return result;\n  }\n\n  public getResult(): boolean {\n    let result: boolean = true;\n    for(let expression of this.logicChildExpressions) {\n      result = result && expression.getResult();\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-and.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\n\nexport class LogicBracketClose extends AbstractLogicExpression{\n\n  protected _expressionType = \")\";\n\n  phraseToString(): string {\n    return \")\";\n  }\n\n  public toString(): string {\n    let result: string = \")\";\n    return result;\n  }\n\n  public getResult(): boolean {\n    return false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-bracket-close.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\nexport class LogicBracketOpen extends AbstractLogicExpression{\n\n  protected _expressionType = \"(\";\n\n  phraseToString(): string {\n    return \"(\";\n  }\n\n  public toString(): string {\n    let result: string = \"(\";\n    return result;\n  }\n\n  public getResult(): boolean {\n    return false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-bracket-open.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\nimport {LogicVar} from \"./logic-var\";\n\nexport class LogicNeg extends AbstractLogicExpression {\n\n  protected rightAssociative = true;\n  protected _precedence = 3;\n  protected _expressionType = \"~\";\n\n  constructor(logicExpression: AbstractLogicExpression = null) {\n    super();\n    if(logicExpression != null) this.logicChildExpressions[0] = logicExpression;\n  }\n\n  phraseToString(): string {\n    if(typeof this._logicChildExpressions[0] !== \"undefined\") {\n      return \"~\"+this._logicChildExpressions[0].phraseToString();\n    } else {\n      return \"\";\n    }\n  }\n\n  public toString(): string {\n    return \"~\";\n  }\n\n  public getResult(): boolean {\n    if(typeof this._logicChildExpressions[0] !== \"undefined\") {\n      return !this._logicChildExpressions[0].getResult();\n    } else {\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-neg.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\n\nexport class LogicOr extends AbstractLogicExpression {\n\n  protected rightAssociative = false;\n  protected _precedence = 1;\n  protected _expressionType = \"+\";\n\n  phraseToString(): string {\n    let result: string = \"(\";\n    for(let expression of this.logicChildExpressions) {\n      result += expression.phraseToString() +  \"+\";\n    }\n    result = result.substring(0, result.length - 1);\n    result += \")\";\n\n    return result;\n  }\n\n  public toString(): string {\n    return \"+\";\n  }\n\n  public getResult(): boolean {\n    let result: boolean = true;\n    for(let expression of this.logicChildExpressions) {\n      result = result || expression.getResult();\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-or.ts","import {AbstractLogicExpression} from './logic-expression-abstract';\nimport {LogicVar} from './logic-var';\nimport {LogicAnd} from './logic-and';\nimport {LogicOr} from './logic-or';\nimport {LogicNeg} from './logic-neg';\nimport {LogicBracketClose} from './logic-bracket-close';\nimport {LogicBracketOpen} from './logic-bracket-open';\nimport {ShuntingYard} from './shunting-yard';\nimport * as _ from 'lodash';\nimport {LogicTreeUtils} from \"./logic-tree-utils\";\nimport {StringMethods} from \"../phrase/string-methods\";\n\nexport class LogicRootExpression extends AbstractLogicExpression {\n\n  phraseToString(): string {\n    if (typeof this._logicChildExpressions[0] !== 'undefined') {\n      return this._logicChildExpressions[0].phraseToString();\n    }\n    return '';\n  }\n\n  phraseToStringWithoutBreakets(): string {\n    if (typeof this._logicChildExpressions[0] !== 'undefined') {\n      let tmp = StringMethods.replaceAll(this._logicChildExpressions[0].phraseToString(),\")\",\"\")\n      return StringMethods.replaceAll(tmp,\"(\",\"\");\n    }\n    return '';\n  }\n\n  private possibleOperands: string[] = Array('~', '+', '*', '(', ')');\n  private _shuntedPhrase: Array<AbstractLogicExpression> = Array();\n\n\n  get shuntedPhrase(): Array<AbstractLogicExpression> {\n    return this._shuntedPhrase;\n  }\n\n  public toString(): string {\n    if (typeof this._logicChildExpressions[0] !== 'undefined') {\n      return this._logicChildExpressions[0].toString();\n    }\n    return '';\n  }\n\n  public getResult(): boolean {\n    if (typeof this._logicChildExpressions[0] !== 'undefined') {\n      return this._logicChildExpressions[0].getResult();\n    }\n    return false;\n  }\n\n  public parseLogicString(logicPhrase: string) {\n\n    const logicObjectPhrase = this.logicStringToObjectAarray(logicPhrase);\n\n    const shuntigYard = new ShuntingYard();\n    this._shuntedPhrase = shuntigYard.startAlgo(logicObjectPhrase);\n\n    const clonedShuntedPhrase: Array<AbstractLogicExpression> = _.cloneDeep(this._shuntedPhrase);\n\n    this.logicChildExpressions = this.parseShuntedYard(clonedShuntedPhrase);\n\n  }\n\n  private logicStringToObjectAarray(logicPhrase: string) {\n    const logicObjectPhrase = Array();\n\n    const actualConjunction = '';\n    let actualVarName = '';\n\n\n    for (let i = 0; i < logicPhrase.length; i++) {\n      if (this.possibleOperands.indexOf(logicPhrase[i]) != -1 && actualVarName != '') {\n        logicObjectPhrase.push(new LogicVar(actualVarName));\n        actualVarName = '';\n      }\n      if (logicPhrase[i] == '~') {\n        logicObjectPhrase.push(new LogicNeg());\n      }\n\n      else if (logicPhrase[i] == '+') {\n        logicObjectPhrase.push(new LogicOr());\n      }\n\n      else if (logicPhrase[i] == '*') {\n        logicObjectPhrase.push(new LogicAnd());\n      }\n\n      else if (logicPhrase[i] == '(') {\n        logicObjectPhrase.push(new LogicBracketOpen());\n      }\n\n      else if (logicPhrase[i] == ')') {\n        logicObjectPhrase.push(new LogicBracketClose());\n      }\n\n      else {\n        actualVarName += logicPhrase[i];\n      }\n    }\n    if (actualVarName != '') logicObjectPhrase.push(new LogicVar(actualVarName));\n    return logicObjectPhrase;\n  }\n\n  private parseShuntedYard(_shuntedPhrase: Array<AbstractLogicExpression>): Array<AbstractLogicExpression> {\n\n    const logicObjects: Array<AbstractLogicExpression> = this.reverseArray(_shuntedPhrase);\n    const logicObjectResults: Array<AbstractLogicExpression> = Array();\n\n    while (logicObjects.length > 0) {\n      let logicObject = logicObjects.pop();\n\n      while (logicObject.parsed && logicObjects.length > 0) {\n        logicObjectResults.push(logicObject);\n        logicObject = logicObjects.pop();\n      }\n      if (logicObject.parsed) {\n        logicObjects.push(logicObject);\n        return logicObjects;\n      }\n\n      if (logicObject instanceof LogicNeg) {\n        const var1 = logicObjectResults.pop();\n        logicObject.add(var1);\n        logicObject.parsed = true;\n        logicObjects.push(logicObject);\n      }\n\n      else {\n        const var1 = logicObjectResults.pop();\n        const var2 = logicObjectResults.pop();\n        logicObject.add(var1);\n        logicObject.add(var2);\n        logicObject.parsed = true;\n        logicObjects.push(logicObject);\n      }\n    }\n\n    return logicObjects;\n  }\n\n  private reverseArray(array: Array<AbstractLogicExpression>): Array<AbstractLogicExpression> {\n    const arrayR = Array();\n    while (array.length > 0) {\n      arrayR.push(array.pop());\n    }\n    return arrayR;\n  }\n\n  public toDNF() {\n    let logicTreeUtils = new LogicTreeUtils();\n\n    this.logicChildExpressions[0] = logicTreeUtils.dissolveLogicNegs(this.logicChildExpressions[0]);\n    this.logicChildExpressions[0] = logicTreeUtils.dissolveLogicAnd(this.logicChildExpressions[0]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-root-expression.ts","export class LogicPhrase {\n\n  private _lengh: number = 0;\n  private _varNames:string[];\n  private _phrase: string = \"\";\n\n\n  constructor(lengh: number, varNames: string[], phrase: string) {\n    this._lengh = lengh;\n    this._varNames = varNames;\n    this._phrase = phrase;\n  }\n\n  get lengh(): number {\n    return this._lengh;\n  }\n\n  set lengh(value: number) {\n    this._lengh = value;\n  }\n\n  varCount(): number {\n    return this._varNames.length;\n  }\n  get varNames(): string[] {\n    return this._varNames;\n  }\n\n  set varNames(value: string[]) {\n    this._varNames = value;\n  }\n\n  get phrase(): string {\n    return this._phrase;\n  }\n\n  set phrase(value: string) {\n    this._phrase = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/phrase/logic-phrase.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 151;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 151\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {LogicRootExpression} from \"./logic-root-expression\";\nimport {LogicNeg} from \"./logic-neg\";\nimport {LogicVar} from \"./logic-var\";\nimport {LogicAnd} from \"./logic-and\";\nimport {LogicOr} from \"./logic-or\";\n\nexport abstract class AbstractLogicExpression {\n\n  protected _logicChildExpressions: AbstractLogicExpression[] = Array();\n  protected rightAssociative = false;\n  protected _precedence = 0;\n  protected _parsed = false;\n  protected _expressionType = \"\";\n\n  get parsed(): boolean {\n    return this._parsed;\n  }\n\n  set parsed(value: boolean) {\n    this._parsed = value;\n  }\n\n  get expressionType(): string {\n    return this._expressionType;\n  }\n\n  set expressionType(value: string) {\n    this._expressionType = value;\n  }\n\n  get precedence(): number {\n    return this._precedence;\n  }\n\n  get logicChildExpressions(): AbstractLogicExpression[] {\n    return this._logicChildExpressions;\n  }\n\n  set logicChildExpressions(value: AbstractLogicExpression[]) {\n    this._logicChildExpressions = value;\n  }\n\n  abstract toString(): string\n  abstract phraseToString(): string\n\n  abstract getResult(): boolean\n\n  public add(oldVar: AbstractLogicExpression) {\n    this.logicChildExpressions.push(oldVar);\n  }\n\n  public isRightAssociative() {\n    if(this.rightAssociative) return true;\n    else return false;\n  }\n\n  public isLeftAssociative() {\n    if(!this.rightAssociative) return true;\n    else return false;\n  }\n\n  public precedenceLessOrEqual(otherOperand: AbstractLogicExpression) {\n    if(this._precedence <= otherOperand.precedence) return true;\n    else return false;\n  }\n\n  public precedenceLess(otherOperand: AbstractLogicExpression) {\n    if(this._precedence < otherOperand.precedence) return true;\n    else return false;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-expression-abstract.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'KV-Toolbox';\n  welcomeMessage = \"Das ist eine KV-Toolbox\";\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { LogicInputComponent } from './logic-input/logic-input.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { BasicLogicPhraseInfoComponent } from './basic-logic-phrase-info/basic-logic-phrase-info.component';\nimport { KVDiagramComponent } from './kvdiagram/kvdiagram.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogicInputComponent,\n    NavbarComponent,\n    BasicLogicPhraseInfoComponent,\n    KVDiagramComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    NgbModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export class Coordinate {\n  constructor(x: number, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  private _x: number = 0;\n  private _y: number = 0;\n\n\n  get x(): number {\n    return this._x;\n  }\n\n  set x(value: number) {\n    this._x = value;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n\n  set y(value: number) {\n    this._y = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/coordinate.ts","import {ElementRef} from '@angular/core';\nimport {KVDiagramSegment} from \"./kvdiagram-segment\";\n\nexport class KvDiagramEntry {\n\n  private _xPos:number;\n  private _yPos:number;\n  private _value:number;\n  private width: number = 50;\n  private varCombinationTag: string[] = Array();\n\n\n  constructor(xPos: number, yPos: number) {\n    this._xPos = xPos;\n    this._yPos = yPos;\n  }\n\n  get xPos(): number {\n    return this._xPos;\n  }\n\n  set xPos(value: number) {\n    this._xPos = value;\n  }\n\n  get yPos(): number {\n    return this._yPos;\n  }\n\n  set yPos(value: number) {\n    this._yPos = value;\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  set value(value: number) {\n    this._value = value;\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.rect(this._xPos * this.width, this._yPos * this.width, this.width, this.width);\n    ctx.stroke();\n\n    if(this.value == 1) {\n      ctx.font = '25px sans-serif';\n      ctx.fillText(\"1\", (this._xPos) * this.width+20, (this._yPos) * this.width+40, this.width);\n    }\n  }\n\n  genCombinationTags(segments: KVDiagramSegment[]) {\n    this.varCombinationTag = Array();\n    for(let segment of segments) {\n      if(segment.inSegment(this._xPos, this._yPos)) this.varCombinationTag.push(segment.varName);\n    }\n  }\n\n  combinationPartOfTag(vars: string[]): boolean {\n    for(let name of vars) {\n      if(!this.varCombinationTag.includes(name)) return false\n    }\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/kv-diagram-entry.ts","import {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {KvDiagramEntry} from \"./kv-diagram-entry\";\nimport {KVDiagram} from \"./kvdiagram\";\nimport {KVDiagramSegment} from \"./kvdiagram-segment\";\nexport class KvDiagramGenerator {\n\n  private logicPhrase: LogicPhrase;\n\n  constructor(logicPhrase: LogicPhrase) {\n    this.logicPhrase = logicPhrase;\n  }\n\n  generateDiagramSegments(kvDiagram: KVDiagram) {\n    let newSegmentLength: number = 1;\n    let actualSegmentType: string = \"x\";\n    let segmentNameRow: number = 1;\n\n    let varName1Neg = new KVDiagramSegment(actualSegmentType, \"~\"+this.logicPhrase.varNames[0], 0, 0, false, segmentNameRow);\n    let varName1Pos = new KVDiagramSegment(actualSegmentType, this.logicPhrase.varNames[0], 1, 1, true, segmentNameRow);\n    kvDiagram.addSegment(varName1Neg);\n    kvDiagram.addSegment(varName1Pos);\n\n    for(let mirrorCount: number = 1; mirrorCount < this.logicPhrase.varCount(); mirrorCount++) {\n      if(actualSegmentType == \"x\") actualSegmentType = \"y\";\n      else actualSegmentType = \"x\"\n\n      //Mirror old segments of the acutal segmentType\n      let toAdd: KVDiagramSegment[] = Array();\n      for(let oldSegment of kvDiagram.segments) {\n        if(oldSegment.segmentType == actualSegmentType) {\n          let mirroredSegment = new KVDiagramSegment(\n            actualSegmentType,\n            oldSegment.varName,\n            newSegmentLength-1+(newSegmentLength-oldSegment.endPos),\n            newSegmentLength-1+(newSegmentLength-oldSegment.startPos),\n            oldSegment.positiv,\n            oldSegment.segmentNameRow\n          )\n          toAdd.push(mirroredSegment);\n        }\n      }\n      //Add mirroed segments\n      for(let newSegment of toAdd) kvDiagram.addSegment(newSegment);\n\n      //Add new segments\n      let varNameNeg = new KVDiagramSegment(actualSegmentType, \"~\"+this.logicPhrase.varNames[mirrorCount], 0, newSegmentLength-1, false, segmentNameRow);\n      let varNamePos = new KVDiagramSegment(actualSegmentType, this.logicPhrase.varNames[mirrorCount], newSegmentLength, (newSegmentLength*2)-1, true, segmentNameRow);\n      kvDiagram.addSegment(varNameNeg);\n      kvDiagram.addSegment(varNamePos);\n\n      if((mirrorCount % 2)== 1) {\n        newSegmentLength = newSegmentLength*2;\n        segmentNameRow++\n      }\n    }\n  }\n\n  generateKVDiagram(): KVDiagram {\n    let fields = Math.pow(2,this.logicPhrase.varCount())\n\n    let xLength = this.getXLength(this.logicPhrase.varCount());\n    let yLength = fields / xLength;\n\n    let kvDiagram = new KVDiagram();\n\n    this.generateDiagramSegments(kvDiagram);\n    this.optimizeDiagramSegments(kvDiagram);\n    let kvMatrix: KvDiagramEntry[][];\n    kvMatrix = this.generateMatrix(xLength, yLength);\n\n\n    kvDiagram.kvMatrix = kvMatrix;\n\n    return kvDiagram;\n\n  }\n\n  fillMatrix() {\n\n  }\n\n  private generateMatrix( xLength: number, yLength: number): KvDiagramEntry[][] {\n    let kvMatrix: KvDiagramEntry[][];\n    kvMatrix = Array();\n    for(let x = 0; x < xLength; x++) {\n      kvMatrix[x] = Array();\n      for(let y = 0; y < yLength; y++) {\n        kvMatrix[x][y] = new KvDiagramEntry(x,y);\n      }\n    }\n\n    return kvMatrix;\n  }\n\n  private getXLength(varCount: number) {\n    let steps:number = varCount/2;\n    let pot:number = Math.floor(steps) + (varCount%2)\n    return Math.pow(2,pot);\n  }\n\n  private optimizeDiagramSegments(kvDiagram: KVDiagram) {\n    for(let segment of kvDiagram.segments) {\n      for(let otherSegment of kvDiagram.segments) {\n        if(otherSegment != segment) {\n          if((segment.endPos+1) == otherSegment.startPos && segment.varName == otherSegment.varName) {\n            let betterSegment:KVDiagramSegment = new KVDiagramSegment(\n                segment.segmentType,\n                segment.varName,\n                segment.startPos,\n                otherSegment.endPos,\n                segment.positiv,\n                segment.segmentNameRow\n                );\n\n            //Delet bad segments\n            var index = kvDiagram.segments.indexOf(segment, 0);\n            if (index > -1) {\n              kvDiagram.segments.splice(index, 1);\n            }\n\n            index = kvDiagram.segments.indexOf(otherSegment, 0);\n            if (index > -1) {\n              kvDiagram.segments.splice(index, 1);\n            }\n\n            //Add better segment\n            kvDiagram.segments.push(betterSegment);\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/kv-diagram-generator.ts","export class KVDiagramSegment {\n\n  private _segmentType: string = \"\";\n  private _varName: string = \"\";\n  private _startPos: number = 0;\n  private _endPos: number = 0;\n  private _positiv: boolean = false;\n\n  private width: number = 50;\n  private _segmentNameRow: number;\n\n  constructor(segmentType: string, varName: string, startPos: number, endPos: number, positiv: boolean, segmentNameRow: number) {\n    this._positiv = positiv;\n    this._segmentType = segmentType;\n    this._varName = varName;\n    this._startPos = startPos;\n    this._endPos = endPos;\n    this._segmentNameRow = segmentNameRow;\n\n    if(this.startPos > this.endPos) {\n      let tmp = this.startPos;\n      this._startPos = this.endPos;\n      this._endPos = tmp;\n    }\n  }\n\n\n  get segmentNameRow(): number {\n    return this._segmentNameRow;\n  }\n\n  set segmentNameRow(value: number) {\n    this._segmentNameRow = value;\n  }\n\n  get positiv(): boolean {\n    return this._positiv;\n  }\n\n  set positiv(value: boolean) {\n    this._positiv = value;\n  }\n\n  get segmentType(): string {\n    return this._segmentType;\n  }\n\n  set segmentType(value: string) {\n    this._segmentType = value;\n  }\n\n  get varName(): string {\n    return this._varName;\n  }\n\n  set varName(value: string) {\n    this._varName = value;\n  }\n\n  get startPos(): number {\n    return this._startPos;\n  }\n\n\n  get endPos(): number {\n    return this._endPos;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, xLength:number, yLength:number) {\n    ctx.font = '25px sans-serif';\n    if(this.segmentType == \"x\") {\n      if(this.positiv) {\n        ctx.beginPath();\n        ctx.moveTo(this.startPos * this.width, yLength * this.width + 30 * this.segmentNameRow - 20);\n        ctx.lineTo(this.endPos * this.width + this.width, yLength * this.width + 30  * this.segmentNameRow - 20);\n        ctx.stroke();\n        ctx.fillText(this.varName, this.startPos * this.width, yLength * this.width + 30 * this.segmentNameRow, this.width);\n      }\n    } else {\n      if(this.positiv) {\n        ctx.beginPath();\n        ctx.moveTo((xLength - 1) * this.width + this.width * this.segmentNameRow + 10,this.startPos * this.width);\n        ctx.lineTo((xLength - 1) * this.width + this.width * this.segmentNameRow + 10,this.endPos * this.width+this.width);\n        ctx.stroke();\n        ctx.fillText(this.varName, (xLength - 1) * this.width + this.width * this.segmentNameRow + 15, this.startPos * this.width+25, this.width);\n      }\n    }\n  }\n\n  inSegment(x:number,y: number)\n  {\n    if(this.segmentType == \"x\") {\n      if(x > this.endPos || x < this.startPos) return false;\n    } else {\n      if(y > this.endPos || y < this.startPos) return false;\n    }\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/kvdiagram-segment.ts","import {KVDiagramSegment} from \"./kvdiagram-segment\";\nimport  {KvDiagramEntry} from \"./kv-diagram-entry\"\nimport {ElementRef} from \"@angular/core\";\nimport {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {StringMethods} from \"../phrase/string-methods\";\nimport {Coordinate} from \"./coordinate\";\n\nexport class KVDiagram {\n\n  private _segments: KVDiagramSegment[] = Array();\n  private _kvMatrix: KvDiagramEntry[][];\n\n  addSegment(segment: KVDiagramSegment) {\n    this._segments.push(segment)\n  }\n\n\n  get kvMatrix(): KvDiagramEntry[][] {\n    return this._kvMatrix;\n  }\n\n  set kvMatrix(value: KvDiagramEntry[][]) {\n    this._kvMatrix = value;\n  }\n\n  get segments(): KVDiagramSegment[] {\n    return this._segments;\n  }\n\n  fill(logicPhrase: LogicPhrase) {\n    let DNFs = logicPhrase.phrase.split(\"+\");\n    for(let DNF of DNFs) {\n      DNF = StringMethods.replaceAll(DNF, \"(\", \"\");\n      DNF = StringMethods.replaceAll(DNF, \")\", \"\");\n      DNF = StringMethods.replaceAll(DNF, \" \", \"\");\n      let vars = DNF.split(\"*\");\n\n      this.genCombinationTagsForEntries();\n\n      let coordinates: Coordinate[] = this.getCoordinate(vars);\n\n      for(let coordinate of coordinates) {\n        this.kvMatrix[coordinate.x][coordinate.y].value = 1;\n      }\n    }\n  }\n\n  draw(canvasRef: ElementRef) {\n    let ctx: CanvasRenderingContext2D =\n      canvasRef.nativeElement.getContext('2d');\n\n    ctx.clearRect(0,0,5000,5000);\n\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        entry.draw(ctx);\n      }\n    }\n\n    for(let segment of this.segments) {\n      segment.draw(ctx, this.kvMatrix.length, this.kvMatrix[0].length);\n    }\n  }\n\n  private getCoordinate(vars: string[]): Coordinate[] {\n\n    this.genCombinationTagsForEntries();\n    let coordinates: Coordinate[] = Array();\n\n    let segmentsRequired: KVDiagramSegment[] = new Array();\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        if(entry.combinationPartOfTag(vars)) {\n          coordinates.push(new Coordinate(entry.xPos, entry.yPos));\n        }\n      }\n    }\n    return coordinates;\n  }\n\n  private genCombinationTagsForEntries() {\n    for(let xRow of this.kvMatrix) {\n      for(let entry of xRow) {\n        entry.genCombinationTags(this._segments);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/kv-diagram-model/kvdiagram.ts","import {Component, Input, OnInit} from '@angular/core';\nimport {BasicLogicPhraseParser} from \"../phrase/basic-logic-phrase-parser\";\nimport {LogicPhrase} from \"../phrase/logic-phrase\";\nimport {BasicLogicPhraseInfoComponent} from \"../basic-logic-phrase-info/basic-logic-phrase-info.component\";\nimport {KVDiagramComponent} from \"../kvdiagram/kvdiagram.component\";\nimport {LogicRootExpression} from \"../logicExpression/logic-root-expression\";\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-logic-input',\n  templateUrl: './logic-input.component.html',\n  styleUrls: ['./logic-input.component.css'],\n  providers: [BasicLogicPhraseParser]\n})\nexport class LogicInputComponent implements OnInit {\n  @Input()\n  basicLogicPhraseInfoCom: BasicLogicPhraseInfoComponent;\n  @Input()\n  kvDiagramCom: KVDiagramComponent;\n\n  logicPhraseString = \"\";\n  logicExtraVars = \"\";\n  private logicPhrase: LogicPhrase;\n  private logicDNFPhrase: LogicPhrase;\n\n  constructor(private basicLogicPhraseParser: BasicLogicPhraseParser) { }\n\n  ngOnInit() {\n  }\n\n  parseLogicPhrase() {\n       let logicRootExpression = new LogicRootExpression();\n    logicRootExpression.parseLogicString(this.logicPhraseString);\n\n    let logicExpressionInDNF: LogicRootExpression = _.cloneDeep(logicRootExpression);\n    logicExpressionInDNF.toDNF();\n\n    this.basicLogicPhraseInfoCom.logicRootExpression = logicRootExpression;\n    this.basicLogicPhraseInfoCom.logicRootExpressionInDNF = logicExpressionInDNF;\n\n    this.logicDNFPhrase = this.basicLogicPhraseParser.parse(logicExpressionInDNF.phraseToStringWithoutBreakets(), this.logicExtraVars);\n    this.logicPhrase = this.basicLogicPhraseParser.parse(this.logicPhraseString, this.logicExtraVars);\n\n    this.basicLogicPhraseInfoCom.logicPhrase = this.logicPhrase;\n\n    this.kvDiagramCom.parse(this.logicDNFPhrase);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logic-input/logic-input.component.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\nimport {LogicOr} from \"./logic-or\";\nimport {LogicAnd} from \"./logic-and\";\nimport {LogicNeg} from \"./logic-neg\";\nimport {LogicVar} from \"./logic-var\";\n\nexport class LogicTreeUtils {\n\n  public dissolveLogicAnd(actualLogicExpression: AbstractLogicExpression): AbstractLogicExpression {\n\n      if(actualLogicExpression instanceof LogicAnd) {\n        let logicConjunction = actualLogicExpression;\n        let var1 = logicConjunction.logicChildExpressions[0];\n        let var2 = logicConjunction.logicChildExpressions[1];\n\n        if(var1 instanceof LogicOr && var2 instanceof LogicOr) {\n          /*\n           * Do all this crazy stuff to have this result:\n           * (a+b)*(c+d) = (((ac+ad)+bc)+db)\n           *\n           * Because on or can only have two child expressions\n           */\n\n          let and1 = new LogicAnd();\n          and1.add(var1.logicChildExpressions[0]);\n          and1.add(var2.logicChildExpressions[0]);\n          let and2 = new LogicAnd();\n          and2.add(var1.logicChildExpressions[0]);\n          and2.add(var2.logicChildExpressions[1]);\n\n          let or1 = new LogicOr();\n          or1.add(and1);\n          or1.add(and2);\n\n          let and3 = new LogicAnd();\n          and3.add(var1.logicChildExpressions[1]);\n          and3.add(var2.logicChildExpressions[0]);\n\n          let or2 = new LogicOr();\n          or2.add(or1);\n          or2.add(and3);\n\n          let and4 = new LogicAnd();\n          and4.add(var1.logicChildExpressions[1]);\n          and4.add(var2.logicChildExpressions[1]);\n\n          let or3 = new LogicOr();\n          or3.add(or2);\n          or3.add(and4);\n\n          actualLogicExpression = or3;\n        }\n\n        else if(var1 instanceof LogicOr && var2 instanceof LogicVar) {\n          actualLogicExpression = new LogicOr();\n\n          let and1 = new LogicAnd();\n          and1.add(var2);\n          and1.add(var1.logicChildExpressions[0]);\n\n          let and2 = new LogicAnd();\n          and2.add(var2);\n          and2.add(var1.logicChildExpressions[1]);\n\n          actualLogicExpression.add(and1);\n          actualLogicExpression.add(and2);\n        }\n\n        else if(var2 instanceof LogicOr && var1 instanceof LogicVar) {\n          actualLogicExpression = new LogicOr();\n\n          let and1 = new LogicAnd();\n          and1.add(var1);\n          and1.add(var2.logicChildExpressions[0]);\n\n          let and2 = new LogicAnd();\n          and2.add(var1);\n          and2.add(var2.logicChildExpressions[1]);\n\n          actualLogicExpression.add(and1);\n          actualLogicExpression.add(and2);\n        }\n      }\n\n      for(let i = 0; i < actualLogicExpression.logicChildExpressions.length; i++) {\n        actualLogicExpression.logicChildExpressions[i] = this.dissolveLogicAnd(actualLogicExpression.logicChildExpressions[i]);\n      }\n      return actualLogicExpression;\n  }\n\n  public dissolveLogicNegs(actualLogicExpression: AbstractLogicExpression): AbstractLogicExpression {\n\n    if(actualLogicExpression.expressionType == \"~\") {\n\n      let logicConjunction = actualLogicExpression.logicChildExpressions[0];\n\n      let var1 = logicConjunction.logicChildExpressions[0];\n      let var2 = logicConjunction.logicChildExpressions[1];\n\n      if(logicConjunction.expressionType == \"*\") {\n        actualLogicExpression = new LogicOr();\n        actualLogicExpression.add(new LogicNeg(var1));\n        actualLogicExpression.add(new LogicNeg(var2));\n      }\n      else if(logicConjunction.expressionType == \"+\") {\n        actualLogicExpression = new LogicAnd();\n        actualLogicExpression.add(new LogicNeg(var1));\n        actualLogicExpression.add(new LogicNeg(var2));\n      }\n    }\n\n\n    for(let i = 0; i < actualLogicExpression.logicChildExpressions.length; i++) {\n      actualLogicExpression.logicChildExpressions[i] = this.dissolveLogicNegs(actualLogicExpression.logicChildExpressions[i]);\n    }\n\n\n    return actualLogicExpression;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-tree-utils.ts","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\nimport {LogicVar} from \"./logic-var\";\nimport {LogicBracketOpen} from \"./logic-bracket-open\";\nimport {LogicBracketClose} from \"./logic-bracket-close\";\n\nexport class ShuntingYard {\n\n  public startAlgo(logicObjectPhrase: Array<AbstractLogicExpression>): Array<AbstractLogicExpression> {\n\n    let operands: Array<AbstractLogicExpression> = new Array<AbstractLogicExpression>();\n    let vars: Array<AbstractLogicExpression> = new Array<AbstractLogicExpression>();\n\n    for(let i = 0; i < logicObjectPhrase.length; i++) {\n      if(logicObjectPhrase[i] instanceof LogicVar) {\n        vars.push(logicObjectPhrase[i]);\n      }\n\n      else if(logicObjectPhrase[i] instanceof LogicBracketOpen) {\n        operands.push(logicObjectPhrase[i]);\n      }\n\n      else if(logicObjectPhrase[i] instanceof LogicBracketClose) {\n        while(operands.length != 0) {\n          let stackOperand = operands.pop();\n          if(stackOperand instanceof LogicBracketOpen) break;\n          vars.push(stackOperand);\n        }\n      }\n\n      else {\n        while(operands.length != 0) {\n          let stackOperand = operands.pop();\n          if(logicObjectPhrase[i].isLeftAssociative() && logicObjectPhrase[i].precedenceLessOrEqual(stackOperand)) {\n            vars.push(stackOperand);\n          } else if(logicObjectPhrase[i].isRightAssociative() && logicObjectPhrase[i].precedenceLess(stackOperand)) {\n            vars.push(stackOperand);\n          } else {\n            operands.push(stackOperand);\n            break;\n          }\n        }\n        operands.push(logicObjectPhrase[i]);\n      }\n\n    }\n\n    while(operands.length != 0) {\n      let stackOperand = operands.pop();\n      vars.push(stackOperand);\n    }\n\n    return vars;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/shunting-yard.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navbar/navbar.component.ts","import { Injectable } from '@angular/core';\nimport {LogicPhrase} from \"./logic-phrase\";\nimport {StringMethods} from \"./string-methods\";\n\n@Injectable()\nexport class BasicLogicPhraseParser {\n\n  private logicPhrase = \"\";\n  private keyChars:string[] = ['(',')','+','~','*'];\n\n  /**\n   * @brief parses the logicPhraseString and returns basic information\n   * @param phrase\n   * @returns {LogicPhrase}\n   */\n  parse(phrase: string, extraVars: string): LogicPhrase {\n    let length = phrase.length;\n\n    phrase = StringMethods.replaceAll(phrase, \" \", \"\");\n\n    let varNames = this.getVarNames(phrase,extraVars);\n\n    let logicPhrase = new LogicPhrase(length, varNames, phrase);\n    return logicPhrase;\n  }\n\n  /**\n   * @brief returns all names of the included Variables (Anything between the keyChars)\n   * @param phrase\n   * @returns {string[]}\n   */\n  getVarNames(phrase: string, extraVars: string): string[] {\n    let varNames:string[] = new Array();\n\n    //Parse the extraVars\n    for(let varName of extraVars.split(\" \")) {\n      if(varName != \"\") varNames.push(varName);\n    }\n\n    //Parse the phrase\n    let actualName: string = \"\";\n    for(let char of phrase) {\n      if(this.keyChars.includes(char)) {\n        if(!varNames.includes(actualName) && actualName != \"\") {\n          varNames.push(actualName);\n        }\n        actualName = \"\";\n      } else {\n        actualName += char;\n      }\n    }\n    if(actualName != \"\" && !varNames.includes(actualName)) {\n      varNames.push(actualName);\n    }\n\n    varNames.sort(function(a, b){\n      if(a < b) return -1;\n      if(a > b) return 1;\n      return 0;\n    })\n    return varNames;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/phrase/basic-logic-phrase-parser.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".colMargin{\\n  margin-bottom: 15px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 228\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.css\n// module id = 229\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/kvdiagram/kvdiagram.component.css\n// module id = 230\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logic-input/logic-input.component.css\n// module id = 231\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.css\n// module id = 232\n// module chunks = 1","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <br>\\n  <h1>\\n    {{welcomeMessage}}\\n  </h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col colMargin\\\"><app-logic-input #logicInput [kvDiagramCom]=\\\"kvDiagramCom\\\" [basicLogicPhraseInfoCom]=\\\"basicLogicPhraseInfoCom\\\"></app-logic-input></div>\\n    <div class=\\\"col colMargin\\\"><app-basic-logic-phrase-info #basicLogicPhraseInfoCom></app-basic-logic-phrase-info></div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 colMargin\\\"><app-kvdiagramm #kvDiagramCom> </app-kvdiagramm></div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 234\n// module chunks = 1","module.exports = \"\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-block\\\">\\n      <h4 class=\\\"card-title\\\">Information</h4>\\n      <table class=\\\"table table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th>Key</th>\\n            <th>Data</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <th scope=\\\"row\\\">Phrase</th>\\n            <td>{{logicPhrase.phrase}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Länge</th>\\n            <td>{{logicPhrase.lengh}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">VarNames</th>\\n            <td>{{logicPhrase.varNames.toString()}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">DNF</th>\\n            <td>{{logicRootExpressionInDNF.phraseToStringWithoutBreakets()}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Parsed tree</th>\\n            <td>{{logicRootExpression.phraseToString()}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Shunting Yard</th>\\n            <td>{{logicRootExpression.shuntedPhrase.toString()}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic-logic-phrase-info/basic-logic-phrase-info.component.html\n// module id = 235\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-block\\\">\\n    <h4 class=\\\"card-title\\\">KV Diagramm</h4>\\n    <canvas #kvDiagramCanvas width=\\\"1000\\\" height=\\\"1000\\\">\\n    </canvas>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/kvdiagram/kvdiagram.component.html\n// module id = 236\n// module chunks = 1","module.exports = \"\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-block\\\">\\n      <h4 class=\\\"card-title\\\">Logik input</h4>\\n      <p class=\\\"card-text\\\">Trage hier die logischen Verknüpfungen ein</p>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"logicPhrase\\\" class=\\\"col-2 col-form-label\\\">Logik Phrase</label>\\n        <div class=\\\"col-10\\\">\\n          <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"logicPhraseString\\\" type=\\\"textarea\\\" value=\\\"\\\" id=\\\"logicPhrase\\\">\\n          </textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"logicPhrase\\\" class=\\\"col-2 col-form-label\\\">Zusätzliche Variablen</label>\\n        <div class=\\\"col-10\\\">\\n          <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"logicExtraVars\\\" type=\\\"textarea\\\" value=\\\"\\\" id=\\\"logicExtraVars\\\">\\n          </textarea>\\n        </div>\\n\\n        <div class=\\\"col-12\\\">\\n          Hier kannst du zusätzliche Variablen angeben, falls der Logische Ausdruck nicht in der DNF sondern nur in  der DF ist.\\n          (Trenne über \\\" \\\")\\n        </div>\\n\\n      </div>\\n      <div class=\\\"row\\\">\\n        <br>\\n        <div class=\\\"col-4\\\">\\n          <button type=\\\"button\\\" (click)=\\\"parseLogicPhrase()\\\"  class=\\\"btn btn-primary\\\">Parse</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logic-input/logic-input.component.html\n// module id = 237\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-toggleable-md navbar-light bg-faded\\\">\\n  <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">KV-Toolbox</a>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.html\n// module id = 238\n// module chunks = 1","import {AbstractLogicExpression} from \"./logic-expression-abstract\";\n\nexport class LogicVar extends AbstractLogicExpression {\n\n  private _value: boolean = false;\n  private _name: string = \"\";\n  protected _parsed = true;\n\n\n  constructor(name: string) {\n    super();\n    this._name = name;\n  }\n\n  get value(): boolean {\n    return this._value;\n  }\n\n  set value(value: boolean) {\n    this._value = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  public toString(): string {\n    return this._name;\n  }\n\n  phraseToString(): string {\n    return this._name;\n  }\n\n  public getResult(): boolean {\n    return this._value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logicExpression/logic-var.ts","export class StringMethods {\n\n  public static replaceAll(str, find, replace) {\n    return str.replace(new RegExp(this.escapeRegExp(find), 'g'), replace);\n  }\n\n  public static escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/phrase/string-methods.ts"],"sourceRoot":""}